ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"process_commands.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.processCommands,"ax",%progbits
  18              		.align	1
  19              		.global	processCommands
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-sp-d16
  26              	processCommands:
  27              	.LFB187:
  28              		.file 1 "Src/motion/process_commands.c"
   1:Src/motion/process_commands.c **** /** @file 		process_commands.c
   2:Src/motion/process_commands.c ****  *  @brief
   3:Src/motion/process_commands.c ****  *  	This file processes the receiver inputs to ensure they are in the correct
   4:Src/motion/process_commands.c ****  *  	ranges for further computations.
   5:Src/motion/process_commands.c ****  *
   6:Src/motion/process_commands.c ****  *  @author 	Jeremy Wolfe
   7:Src/motion/process_commands.c ****  *  @date 		07 MAR 2022
   8:Src/motion/process_commands.c ****  */
   9:Src/motion/process_commands.c **** 
  10:Src/motion/process_commands.c **** /* Includes */
  11:Src/motion/process_commands.c **** #include "board.h"
  12:Src/motion/process_commands.c **** 
  13:Src/motion/process_commands.c **** /* Global Variables */
  14:Src/motion/process_commands.c **** uint8_t  commandInDetent[3]         = { true, true, true };
  15:Src/motion/process_commands.c **** uint8_t  previousCommandInDetent[3] = { true, true, true };
  16:Src/motion/process_commands.c **** 
  17:Src/motion/process_commands.c **** modes_e mode = TRANS_FLIGHT;
  18:Src/motion/process_commands.c **** flightModes_e flightMode = ANGLE;
  19:Src/motion/process_commands.c **** semaphore_t armed = false;
  20:Src/motion/process_commands.c **** uint8_t armingTimer    = 0;
  21:Src/motion/process_commands.c **** uint8_t disarmingTimer = 0;
  22:Src/motion/process_commands.c **** 
  23:Src/motion/process_commands.c **** float rxCommands[8];
  24:Src/motion/process_commands.c **** 
  25:Src/motion/process_commands.c **** /** @brief Processes receiver commands.
  26:Src/motion/process_commands.c ****  *
  27:Src/motion/process_commands.c ****  *  @return Void.
  28:Src/motion/process_commands.c ****  */
  29:Src/motion/process_commands.c **** void
  30:Src/motion/process_commands.c **** processCommands(void)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 2


  31:Src/motion/process_commands.c **** {
  29              		.loc 1 31 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37 0002 2DED028B 		vpush.64	{d8}
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 80, -16
  40              		.cfi_offset 81, -12
  32:Src/motion/process_commands.c **** 	uint8_t channel;
  41              		.loc 1 32 2 view .LVU1
  33:Src/motion/process_commands.c **** 	uint8_t channelsToRead = 8;
  42              		.loc 1 33 2 view .LVU2
  43              	.LVL0:
  34:Src/motion/process_commands.c **** 
  35:Src/motion/process_commands.c **** 	if ( rcActive == true )
  44              		.loc 1 35 2 view .LVU3
  45              		.loc 1 35 16 is_stmt 0 view .LVU4
  46 0006 C24B     		ldr	r3, .L71
  47 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  48              		.loc 1 35 5 view .LVU5
  49 000a 93B3     		cbz	r3, .L2
  36:Src/motion/process_commands.c **** 	{
  37:Src/motion/process_commands.c **** 		/* Makes RPY from -1000 to 1000 */
  38:Src/motion/process_commands.c **** 		rxCommands[ROLL]  = (ibusChannels[ROLL ] * 2) - MIDCOMMAND;	// Roll Range  -1000:1000
  50              		.loc 1 38 3 is_stmt 1 view .LVU6
  51              		.loc 1 38 36 is_stmt 0 view .LVU7
  52 000c C149     		ldr	r1, .L71+4
  53 000e 0B88     		ldrh	r3, [r1]
  54              		.loc 1 38 49 view .LVU8
  55 0010 A3F2DC53 		subw	r3, r3, #1500
  56 0014 5B00     		lsls	r3, r3, #1
  57              		.loc 1 38 21 view .LVU9
  58 0016 C04A     		ldr	r2, .L71+8
  59 0018 07EE903A 		vmov	s15, r3	@ int
  60 001c F8EEE77A 		vcvt.f32.s32	s15, s15
  61 0020 C2ED007A 		vstr.32	s15, [r2]
  39:Src/motion/process_commands.c **** 		rxCommands[PITCH] = (ibusChannels[PITCH] * 2) - MIDCOMMAND;	// Pitch Range -1000:1000
  62              		.loc 1 39 3 is_stmt 1 view .LVU10
  63              		.loc 1 39 36 is_stmt 0 view .LVU11
  64 0024 4B88     		ldrh	r3, [r1, #2]
  65              		.loc 1 39 49 view .LVU12
  66 0026 A3F2DC53 		subw	r3, r3, #1500
  67 002a 5B00     		lsls	r3, r3, #1
  68              		.loc 1 39 21 view .LVU13
  69 002c 07EE903A 		vmov	s15, r3	@ int
  70 0030 F8EEE77A 		vcvt.f32.s32	s15, s15
  71 0034 C2ED017A 		vstr.32	s15, [r2, #4]
  40:Src/motion/process_commands.c **** 		rxCommands[YAW]   = (ibusChannels[YAW  ] * 2) - MIDCOMMAND;	// Yaw Range   -1000:1000
  72              		.loc 1 40 3 is_stmt 1 view .LVU14
  73              		.loc 1 40 36 is_stmt 0 view .LVU15
  74 0038 8B88     		ldrh	r3, [r1, #4]
  75              		.loc 1 40 49 view .LVU16
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 3


  76 003a A3F2DC53 		subw	r3, r3, #1500
  77 003e 5B00     		lsls	r3, r3, #1
  78              		.loc 1 40 21 view .LVU17
  79 0040 07EE903A 		vmov	s15, r3	@ int
  80 0044 F8EEE77A 		vcvt.f32.s32	s15, s15
  81 0048 C2ED027A 		vstr.32	s15, [r2, #8]
  41:Src/motion/process_commands.c **** 
  42:Src/motion/process_commands.c **** 		/* Makes all other channels from 2000 to 4000 */
  43:Src/motion/process_commands.c **** 		for (channel = 3; channel < channelsToRead; channel++)
  82              		.loc 1 43 3 is_stmt 1 view .LVU18
  83              	.LVL1:
  84              		.loc 1 43 16 is_stmt 0 view .LVU19
  85 004c 0323     		movs	r3, #3
  86              		.loc 1 43 3 view .LVU20
  87 004e 0EE0     		b	.L3
  88              	.LVL2:
  89              	.L4:
  44:Src/motion/process_commands.c **** 			rxCommands[channel] = ibusChannels[channel] * 2;
  90              		.loc 1 44 4 is_stmt 1 discriminator 3 view .LVU21
  91              		.loc 1 44 38 is_stmt 0 discriminator 3 view .LVU22
  92 0050 B04A     		ldr	r2, .L71+4
  93 0052 32F81320 		ldrh	r2, [r2, r3, lsl #1]
  94              		.loc 1 44 48 discriminator 3 view .LVU23
  95 0056 5200     		lsls	r2, r2, #1
  96              		.loc 1 44 24 discriminator 3 view .LVU24
  97 0058 AF49     		ldr	r1, .L71+8
  98 005a 01EB8301 		add	r1, r1, r3, lsl #2
  99 005e 07EE902A 		vmov	s15, r2	@ int
 100 0062 F8EEE77A 		vcvt.f32.s32	s15, s15
 101 0066 C1ED007A 		vstr.32	s15, [r1]
  43:Src/motion/process_commands.c **** 			rxCommands[channel] = ibusChannels[channel] * 2;
 102              		.loc 1 43 47 is_stmt 1 discriminator 3 view .LVU25
  43:Src/motion/process_commands.c **** 			rxCommands[channel] = ibusChannels[channel] * 2;
 103              		.loc 1 43 54 is_stmt 0 discriminator 3 view .LVU26
 104 006a 0133     		adds	r3, r3, #1
 105              	.LVL3:
  43:Src/motion/process_commands.c **** 			rxCommands[channel] = ibusChannels[channel] * 2;
 106              		.loc 1 43 54 discriminator 3 view .LVU27
 107 006c DBB2     		uxtb	r3, r3
 108              	.LVL4:
 109              	.L3:
  43:Src/motion/process_commands.c **** 			rxCommands[channel] = ibusChannels[channel] * 2;
 110              		.loc 1 43 21 is_stmt 1 discriminator 1 view .LVU28
  43:Src/motion/process_commands.c **** 			rxCommands[channel] = ibusChannels[channel] * 2;
 111              		.loc 1 43 3 is_stmt 0 discriminator 1 view .LVU29
 112 006e 072B     		cmp	r3, #7
 113 0070 EED9     		bls	.L4
 114              	.LVL5:
 115              	.L2:
  43:Src/motion/process_commands.c **** 			rxCommands[channel] = ibusChannels[channel] * 2;
 116              		.loc 1 43 16 discriminator 1 view .LVU30
 117 0072 0023     		movs	r3, #0
 118 0074 05E0     		b	.L5
 119              	.LVL6:
 120              	.L6:
  45:Src/motion/process_commands.c **** 	}
  46:Src/motion/process_commands.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 4


  47:Src/motion/process_commands.c **** 	// Set past command in detent values
  48:Src/motion/process_commands.c **** 	for (channel = 0; channel < 3; channel++)
  49:Src/motion/process_commands.c **** 		previousCommandInDetent[channel] = commandInDetent[channel];
 121              		.loc 1 49 3 is_stmt 1 discriminator 3 view .LVU31
 122              		.loc 1 49 53 is_stmt 0 discriminator 3 view .LVU32
 123 0076 A94A     		ldr	r2, .L71+12
 124 0078 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 125              		.loc 1 49 36 discriminator 3 view .LVU33
 126 007a A94A     		ldr	r2, .L71+16
 127 007c D154     		strb	r1, [r2, r3]
  48:Src/motion/process_commands.c **** 		previousCommandInDetent[channel] = commandInDetent[channel];
 128              		.loc 1 48 33 is_stmt 1 discriminator 3 view .LVU34
  48:Src/motion/process_commands.c **** 		previousCommandInDetent[channel] = commandInDetent[channel];
 129              		.loc 1 48 40 is_stmt 0 discriminator 3 view .LVU35
 130 007e 0133     		adds	r3, r3, #1
 131              	.LVL7:
  48:Src/motion/process_commands.c **** 		previousCommandInDetent[channel] = commandInDetent[channel];
 132              		.loc 1 48 40 discriminator 3 view .LVU36
 133 0080 DBB2     		uxtb	r3, r3
 134              	.LVL8:
 135              	.L5:
  48:Src/motion/process_commands.c **** 		previousCommandInDetent[channel] = commandInDetent[channel];
 136              		.loc 1 48 20 is_stmt 1 discriminator 1 view .LVU37
  48:Src/motion/process_commands.c **** 		previousCommandInDetent[channel] = commandInDetent[channel];
 137              		.loc 1 48 2 is_stmt 0 discriminator 1 view .LVU38
 138 0082 022B     		cmp	r3, #2
 139 0084 F7D9     		bls	.L6
  50:Src/motion/process_commands.c **** 
  51:Src/motion/process_commands.c **** 	// Apply deadbands and set detent discretes'
  52:Src/motion/process_commands.c **** 	for (channel = 0; channel < 3; channel++)
 140              		.loc 1 52 15 view .LVU39
 141 0086 0023     		movs	r3, #0
 142              	.LVL9:
 143              		.loc 1 52 15 view .LVU40
 144 0088 16E0     		b	.L7
 145              	.LVL10:
 146              	.L8:
  53:Src/motion/process_commands.c **** 	{
  54:Src/motion/process_commands.c **** 		/* RPY is within deadband */
  55:Src/motion/process_commands.c **** 		if ((rxCommands[channel] <= DEADBAND) && (rxCommands[channel] >= -DEADBAND))
  56:Src/motion/process_commands.c **** 		{
  57:Src/motion/process_commands.c **** 			rxCommands[channel] = 0;			// set command to 0
  58:Src/motion/process_commands.c **** 			commandInDetent[channel] = true;	// command IS within detent
  59:Src/motion/process_commands.c **** 		}
  60:Src/motion/process_commands.c **** 		else
  61:Src/motion/process_commands.c **** 		{
  62:Src/motion/process_commands.c **** 			commandInDetent[channel] = false;
 147              		.loc 1 62 4 is_stmt 1 view .LVU41
 148              		.loc 1 62 29 is_stmt 0 view .LVU42
 149 008a A44A     		ldr	r2, .L71+12
 150 008c 0020     		movs	r0, #0
 151 008e 5054     		strb	r0, [r2, r1]
  63:Src/motion/process_commands.c **** 			if (rxCommands[channel] > 0)
 152              		.loc 1 63 4 is_stmt 1 view .LVU43
 153              		.loc 1 63 7 is_stmt 0 view .LVU44
 154 0090 F5EEC07A 		vcmpe.f32	s15, #0
 155 0094 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 5


 156 0098 2DDD     		ble	.L60
  64:Src/motion/process_commands.c **** 			{
  65:Src/motion/process_commands.c **** 				rxCommands[channel] = (rxCommands[channel] - DEADBAND) * DEADBAND_SLOPE;
 157              		.loc 1 65 5 is_stmt 1 view .LVU45
 158              		.loc 1 65 48 is_stmt 0 view .LVU46
 159 009a B3EE087A 		vmov.f32	s14, #2.4e+1
 160 009e 77EEC77A 		vsub.f32	s15, s15, s14
 161              		.loc 1 65 60 view .LVU47
 162 00a2 9FEDA07A 		vldr.32	s14, .L71+20
 163 00a6 67EE877A 		vmul.f32	s15, s15, s14
 164              		.loc 1 65 25 view .LVU48
 165 00aa 9B4A     		ldr	r2, .L71+8
 166 00ac 02EB8101 		add	r1, r2, r1, lsl #2
 167 00b0 C1ED007A 		vstr.32	s15, [r1]
 168              	.L11:
  52:Src/motion/process_commands.c **** 	{
 169              		.loc 1 52 33 is_stmt 1 discriminator 2 view .LVU49
  52:Src/motion/process_commands.c **** 	{
 170              		.loc 1 52 40 is_stmt 0 discriminator 2 view .LVU50
 171 00b4 0133     		adds	r3, r3, #1
 172              	.LVL11:
  52:Src/motion/process_commands.c **** 	{
 173              		.loc 1 52 40 discriminator 2 view .LVU51
 174 00b6 DBB2     		uxtb	r3, r3
 175              	.LVL12:
 176              	.L7:
  52:Src/motion/process_commands.c **** 	{
 177              		.loc 1 52 20 is_stmt 1 discriminator 1 view .LVU52
  52:Src/motion/process_commands.c **** 	{
 178              		.loc 1 52 2 is_stmt 0 discriminator 1 view .LVU53
 179 00b8 022B     		cmp	r3, #2
 180 00ba 2AD8     		bhi	.L63
  55:Src/motion/process_commands.c **** 		{
 181              		.loc 1 55 3 is_stmt 1 view .LVU54
  55:Src/motion/process_commands.c **** 		{
 182              		.loc 1 55 18 is_stmt 0 view .LVU55
 183 00bc 1946     		mov	r1, r3
 184 00be 964A     		ldr	r2, .L71+8
 185 00c0 02EB8302 		add	r2, r2, r3, lsl #2
 186 00c4 D2ED007A 		vldr.32	s15, [r2]
  55:Src/motion/process_commands.c **** 		{
 187              		.loc 1 55 6 view .LVU56
 188 00c8 B3EE087A 		vmov.f32	s14, #2.4e+1
 189 00cc F4EEC77A 		vcmpe.f32	s15, s14
 190 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 191 00d4 D9D8     		bhi	.L8
  55:Src/motion/process_commands.c **** 		{
 192              		.loc 1 55 41 discriminator 1 view .LVU57
 193 00d6 BBEE087A 		vmov.f32	s14, #-2.4e+1
 194 00da F4EEC77A 		vcmpe.f32	s15, s14
 195 00de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 196 00e2 D2DB     		blt	.L8
  57:Src/motion/process_commands.c **** 			commandInDetent[channel] = true;	// command IS within detent
 197              		.loc 1 57 4 is_stmt 1 view .LVU58
  57:Src/motion/process_commands.c **** 			commandInDetent[channel] = true;	// command IS within detent
 198              		.loc 1 57 24 is_stmt 0 view .LVU59
 199 00e4 8C4A     		ldr	r2, .L71+8
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 6


 200 00e6 02EB8302 		add	r2, r2, r3, lsl #2
 201 00ea 0020     		movs	r0, #0
 202 00ec 1060     		str	r0, [r2]	@ float
  58:Src/motion/process_commands.c **** 		}
 203              		.loc 1 58 4 is_stmt 1 view .LVU60
  58:Src/motion/process_commands.c **** 		}
 204              		.loc 1 58 29 is_stmt 0 view .LVU61
 205 00ee 8B4A     		ldr	r2, .L71+12
 206 00f0 0120     		movs	r0, #1
 207 00f2 D054     		strb	r0, [r2, r3]
 208 00f4 DEE7     		b	.L11
 209              	.L60:
  66:Src/motion/process_commands.c **** 			}
  67:Src/motion/process_commands.c **** 			else
  68:Src/motion/process_commands.c **** 			{
  69:Src/motion/process_commands.c **** 				rxCommands[channel] = (rxCommands[channel] + DEADBAND) * DEADBAND_SLOPE;
 210              		.loc 1 69 5 is_stmt 1 view .LVU62
 211              		.loc 1 69 48 is_stmt 0 view .LVU63
 212 00f6 B3EE087A 		vmov.f32	s14, #2.4e+1
 213 00fa 77EE877A 		vadd.f32	s15, s15, s14
 214              		.loc 1 69 60 view .LVU64
 215 00fe 9FED897A 		vldr.32	s14, .L71+20
 216 0102 67EE877A 		vmul.f32	s15, s15, s14
 217              		.loc 1 69 25 view .LVU65
 218 0106 844A     		ldr	r2, .L71+8
 219 0108 02EB8101 		add	r1, r2, r1, lsl #2
 220 010c C1ED007A 		vstr.32	s15, [r1]
 221 0110 D0E7     		b	.L11
 222              	.L63:
  70:Src/motion/process_commands.c **** 			}
  71:Src/motion/process_commands.c **** 		}
  72:Src/motion/process_commands.c **** 	}
  73:Src/motion/process_commands.c **** 
  74:Src/motion/process_commands.c **** 	///////////////////////////////////
  75:Src/motion/process_commands.c **** 
  76:Src/motion/process_commands.c **** 	/*		Check for disarm switch	*/
  77:Src/motion/process_commands.c **** 	if(rxCommands[AUX1] < MIDCOMMAND)
 223              		.loc 1 77 2 is_stmt 1 view .LVU66
 224              		.loc 1 77 15 is_stmt 0 view .LVU67
 225 0112 814B     		ldr	r3, .L71+8
 226              	.LVL13:
 227              		.loc 1 77 15 view .LVU68
 228 0114 93ED047A 		vldr.32	s14, [r3, #16]
 229              		.loc 1 77 4 view .LVU69
 230 0118 DFED837A 		vldr.32	s15, .L71+24
 231 011c B4EEE77A 		vcmpe.f32	s14, s15
 232 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 233 0124 4DD4     		bmi	.L64
 234              	.L15:
  78:Src/motion/process_commands.c **** 	{
  79:Src/motion/process_commands.c **** 		zeroPIDstates();
  80:Src/motion/process_commands.c **** 		armed = false;
  81:Src/motion/process_commands.c **** 		disarmingTimer = 0;
  82:Src/motion/process_commands.c **** 
  83:Src/motion/process_commands.c **** 		// Check for gyro bias command ( low throttle, left yaw, aft pitch, right roll )
  84:Src/motion/process_commands.c **** 		if ( (rxCommands[YAW  ] < (eepromConfig.minCheck - MIDCOMMAND)) &&		//mincheck = 2200
  85:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] > (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 7


  86:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
  87:Src/motion/process_commands.c **** 		{
  88:Src/motion/process_commands.c **** 			delay(100);
  89:Src/motion/process_commands.c **** 			mpu6000Calibration();
  90:Src/motion/process_commands.c **** 		}
  91:Src/motion/process_commands.c **** 
  92:Src/motion/process_commands.c **** 		if((rxCommands[YAW] < (eepromConfig.minCheck - MIDCOMMAND)) &&
  93:Src/motion/process_commands.c **** 				(rxCommands[ROLL] > (eepromConfig.maxCheck - MIDCOMMAND)) &&
  94:Src/motion/process_commands.c **** 				(rxCommands[PITCH] > (eepromConfig.maxCheck - MIDCOMMAND)))
  95:Src/motion/process_commands.c **** 		{
  96:Src/motion/process_commands.c **** 			delay(100);
  97:Src/motion/process_commands.c **** 			initPIDvalues();
  98:Src/motion/process_commands.c **** 		}
  99:Src/motion/process_commands.c **** 		if((rxCommands[YAW] > (eepromConfig.minCheck - MIDCOMMAND)) &&
 100:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] < (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 101:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 102:Src/motion/process_commands.c **** 		{
 103:Src/motion/process_commands.c **** 			delay(100);
 104:Src/motion/process_commands.c **** 			computeMPU6000RTData();
 105:Src/motion/process_commands.c **** 		}
 106:Src/motion/process_commands.c **** 	}
 107:Src/motion/process_commands.c **** 
 108:Src/motion/process_commands.c **** 	/*		Check for arm switch and throttle low(<2200)	*/
 109:Src/motion/process_commands.c **** 	if((rxCommands[AUX1] > MIDCOMMAND) &&
 235              		.loc 1 109 2 is_stmt 1 view .LVU70
 236              		.loc 1 109 16 is_stmt 0 view .LVU71
 237 0126 7C4B     		ldr	r3, .L71+8
 238 0128 93ED047A 		vldr.32	s14, [r3, #16]
 239              		.loc 1 109 4 view .LVU72
 240 012c DFED7E7A 		vldr.32	s15, .L71+24
 241 0130 B4EEE77A 		vcmpe.f32	s14, s15
 242 0134 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 243 0138 0EDD     		ble	.L28
 110:Src/motion/process_commands.c **** 	   (rxCommands[THROTTLE] < eepromConfig.minCheck) &&
 244              		.loc 1 110 16 discriminator 1 view .LVU73
 245 013a 93ED037A 		vldr.32	s14, [r3, #12]
 246              		.loc 1 110 41 discriminator 1 view .LVU74
 247 013e 7B4B     		ldr	r3, .L71+28
 248 0140 D3ED1E7A 		vldr.32	s15, [r3, #120]
 109:Src/motion/process_commands.c **** 	   (rxCommands[THROTTLE] < eepromConfig.minCheck) &&
 249              		.loc 1 109 37 discriminator 1 view .LVU75
 250 0144 B4EEE77A 		vcmpe.f32	s14, s15
 251 0148 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 252 014c 04D5     		bpl	.L28
 111:Src/motion/process_commands.c **** 	   (armed == false))
 253              		.loc 1 111 12 view .LVU76
 254 014e 784B     		ldr	r3, .L71+32
 255 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 110:Src/motion/process_commands.c **** 	   (rxCommands[THROTTLE] < eepromConfig.minCheck) &&
 256              		.loc 1 110 52 view .LVU77
 257 0152 002B     		cmp	r3, #0
 258 0154 00F0C180 		beq	.L65
 259              	.L28:
 112:Src/motion/process_commands.c **** 	{
 113:Src/motion/process_commands.c **** 		zeroPIDstates();
 114:Src/motion/process_commands.c **** 		armed = true;
 115:Src/motion/process_commands.c **** 	}
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 8


 116:Src/motion/process_commands.c **** 
 117:Src/motion/process_commands.c **** 	/* Check for Flight Mode Change */
 118:Src/motion/process_commands.c **** 	if(rxCommands[AUX3] > MIDCOMMAND)
 260              		.loc 1 118 2 is_stmt 1 view .LVU78
 261              		.loc 1 118 15 is_stmt 0 view .LVU79
 262 0158 6F4B     		ldr	r3, .L71+8
 263 015a 93ED067A 		vldr.32	s14, [r3, #24]
 264              		.loc 1 118 4 view .LVU80
 265 015e DFED727A 		vldr.32	s15, .L71+24
 266 0162 B4EEE77A 		vcmpe.f32	s14, s15
 267 0166 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 268 016a 40F3BC80 		ble	.L61
 119:Src/motion/process_commands.c **** 		flightMode = RATE;
 269              		.loc 1 119 3 is_stmt 1 view .LVU81
 270              		.loc 1 119 14 is_stmt 0 view .LVU82
 271 016e 714B     		ldr	r3, .L71+36
 272 0170 0022     		movs	r2, #0
 273 0172 1A70     		strb	r2, [r3]
 274              	.L33:
 120:Src/motion/process_commands.c **** 	else
 121:Src/motion/process_commands.c **** 		flightMode = ANGLE;
 122:Src/motion/process_commands.c **** 
 123:Src/motion/process_commands.c **** 	///////////////////////////////////
 124:Src/motion/process_commands.c **** 
 125:Src/motion/process_commands.c **** 	// Check for armed true and throttle command > minThrottle
 126:Src/motion/process_commands.c **** 
 127:Src/motion/process_commands.c **** 	if ((armed == true) && (rxCommands[THROTTLE] > eepromConfig.minThrottle))
 275              		.loc 1 127 2 is_stmt 1 view .LVU83
 276              		.loc 1 127 13 is_stmt 0 view .LVU84
 277 0174 6E4B     		ldr	r3, .L71+32
 278 0176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 279 0178 DBB2     		uxtb	r3, r3
 280              		.loc 1 127 5 view .LVU85
 281 017a 012B     		cmp	r3, #1
 282 017c 00F0B780 		beq	.L66
 283              	.L34:
 128:Src/motion/process_commands.c **** 		pidReset = false;
 129:Src/motion/process_commands.c **** 	else
 130:Src/motion/process_commands.c **** 		pidReset = true;
 284              		.loc 1 130 3 is_stmt 1 view .LVU86
 285              		.loc 1 130 12 is_stmt 0 view .LVU87
 286 0180 6D4B     		ldr	r3, .L71+40
 287 0182 0122     		movs	r2, #1
 288 0184 1A70     		strb	r2, [r3]
 289              	.L36:
 131:Src/motion/process_commands.c **** 
 132:Src/motion/process_commands.c **** 	///////////////////////////////////
 133:Src/motion/process_commands.c **** 
 134:Src/motion/process_commands.c **** 	// Check AUX1 for flight or rover mode
 135:Src/motion/process_commands.c **** 
 136:Src/motion/process_commands.c **** 	if ((rxCommands[AUX2] > MIDCOMMAND) &&
 290              		.loc 1 136 2 is_stmt 1 view .LVU88
 291              		.loc 1 136 17 is_stmt 0 view .LVU89
 292 0186 644B     		ldr	r3, .L71+8
 293 0188 D3ED057A 		vldr.32	s15, [r3, #20]
 294              		.loc 1 136 5 view .LVU90
 295 018c 9FED667A 		vldr.32	s14, .L71+24
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 9


 296 0190 F4EEC77A 		vcmpe.f32	s15, s14
 297 0194 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 298 0198 04DD     		ble	.L37
 137:Src/motion/process_commands.c **** 		(mode == ROVER) &&
 299              		.loc 1 137 9 discriminator 1 view .LVU91
 300 019a 684B     		ldr	r3, .L71+44
 301 019c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 136:Src/motion/process_commands.c **** 		(mode == ROVER) &&
 302              		.loc 1 136 38 discriminator 1 view .LVU92
 303 019e 032B     		cmp	r3, #3
 304 01a0 00F0D080 		beq	.L67
 305              	.L37:
 138:Src/motion/process_commands.c **** 		(armed == false))
 139:Src/motion/process_commands.c **** 	{
 140:Src/motion/process_commands.c **** 		mode = TRANS_FLIGHT;
 141:Src/motion/process_commands.c **** 		setPIDstates(ROLL_ATT_PID,  0.0f);
 142:Src/motion/process_commands.c **** 		setPIDstates(PITCH_ATT_PID, 0.0f);
 143:Src/motion/process_commands.c **** 		setPIDstates(HEADING_PID,   0.0f);
 144:Src/motion/process_commands.c **** 
 145:Src/motion/process_commands.c **** 		modeTransition();
 146:Src/motion/process_commands.c **** 	}
 147:Src/motion/process_commands.c **** 	else if ((rxCommands[AUX2] <= MIDCOMMAND) &&
 306              		.loc 1 147 7 is_stmt 1 view .LVU93
 307              		.loc 1 147 10 is_stmt 0 view .LVU94
 308 01a4 9FED607A 		vldr.32	s14, .L71+24
 309 01a8 F4EEC77A 		vcmpe.f32	s15, s14
 310 01ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 311 01b0 04D8     		bhi	.L1
 148:Src/motion/process_commands.c **** 			 (mode == FLIGHT) &&
 312              		.loc 1 148 11 discriminator 1 view .LVU95
 313 01b2 624B     		ldr	r3, .L71+44
 314 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 147:Src/motion/process_commands.c **** 			 (mode == FLIGHT) &&
 315              		.loc 1 147 44 discriminator 1 view .LVU96
 316 01b6 012B     		cmp	r3, #1
 317 01b8 00F0E080 		beq	.L68
 318              	.L1:
 149:Src/motion/process_commands.c **** 			 (armed == false))
 150:Src/motion/process_commands.c **** 	{
 151:Src/motion/process_commands.c **** 		mode = TRANS_ROVER;
 152:Src/motion/process_commands.c **** 		setPIDstates(ROLL_ATT_PID,  0.0f);
 153:Src/motion/process_commands.c **** 		setPIDstates(PITCH_ATT_PID, 0.0f);
 154:Src/motion/process_commands.c **** 		setPIDstates(HEADING_PID,   0.0f);
 155:Src/motion/process_commands.c **** 
 156:Src/motion/process_commands.c **** 		modeTransition();
 157:Src/motion/process_commands.c **** 	}
 158:Src/motion/process_commands.c **** }
 319              		.loc 1 158 1 view .LVU97
 320 01bc BDEC028B 		vldm	sp!, {d8}
 321              		.cfi_remember_state
 322              		.cfi_restore 80
 323              		.cfi_restore 81
 324              		.cfi_def_cfa_offset 8
 325 01c0 08BD     		pop	{r3, pc}
 326              	.L64:
 327              		.cfi_restore_state
  79:Src/motion/process_commands.c **** 		armed = false;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 10


 328              		.loc 1 79 3 is_stmt 1 view .LVU98
 329 01c2 FFF7FEFF 		bl	zeroPIDstates
 330              	.LVL14:
  80:Src/motion/process_commands.c **** 		disarmingTimer = 0;
 331              		.loc 1 80 3 view .LVU99
  80:Src/motion/process_commands.c **** 		disarmingTimer = 0;
 332              		.loc 1 80 9 is_stmt 0 view .LVU100
 333 01c6 0023     		movs	r3, #0
 334 01c8 594A     		ldr	r2, .L71+32
 335 01ca 1370     		strb	r3, [r2]
  81:Src/motion/process_commands.c **** 
 336              		.loc 1 81 3 is_stmt 1 view .LVU101
  81:Src/motion/process_commands.c **** 
 337              		.loc 1 81 18 is_stmt 0 view .LVU102
 338 01cc 5C4A     		ldr	r2, .L71+48
 339 01ce 1370     		strb	r3, [r2]
  84:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] > (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 340              		.loc 1 84 3 is_stmt 1 view .LVU103
  84:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] > (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 341              		.loc 1 84 19 is_stmt 0 view .LVU104
 342 01d0 514B     		ldr	r3, .L71+8
 343 01d2 93ED027A 		vldr.32	s14, [r3, #8]
  84:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] > (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 344              		.loc 1 84 42 view .LVU105
 345 01d6 554B     		ldr	r3, .L71+28
 346 01d8 D3ED1E7A 		vldr.32	s15, [r3, #120]
  84:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] > (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 347              		.loc 1 84 52 view .LVU106
 348 01dc DFED526A 		vldr.32	s13, .L71+24
 349 01e0 77EEE67A 		vsub.f32	s15, s15, s13
  84:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] > (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 350              		.loc 1 84 6 view .LVU107
 351 01e4 B4EEE77A 		vcmpe.f32	s14, s15
 352 01e8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 353 01ec 16D5     		bpl	.L17
  85:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 354              		.loc 1 85 16 discriminator 1 view .LVU108
 355 01ee 4A4B     		ldr	r3, .L71+8
 356 01f0 D3ED006A 		vldr.32	s13, [r3]
  85:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 357              		.loc 1 85 39 discriminator 1 view .LVU109
 358 01f4 4D4B     		ldr	r3, .L71+28
 359 01f6 93ED1F7A 		vldr.32	s14, [r3, #124]
  85:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 360              		.loc 1 85 49 discriminator 1 view .LVU110
 361 01fa 9FED4B6A 		vldr.32	s12, .L71+24
 362 01fe 37EE467A 		vsub.f32	s14, s14, s12
  84:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] > (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 363              		.loc 1 84 67 discriminator 1 view .LVU111
 364 0202 F4EEC76A 		vcmpe.f32	s13, s14
 365 0206 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 366 020a 07DD     		ble	.L17
  86:Src/motion/process_commands.c **** 		{
 367              		.loc 1 86 16 view .LVU112
 368 020c 424B     		ldr	r3, .L71+8
 369 020e 93ED017A 		vldr.32	s14, [r3, #4]
  85:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 11


 370              		.loc 1 85 64 view .LVU113
 371 0212 F4EEC77A 		vcmpe.f32	s15, s14
 372 0216 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 373 021a 52DC     		bgt	.L69
 374              	.L17:
  92:Src/motion/process_commands.c **** 				(rxCommands[ROLL] > (eepromConfig.maxCheck - MIDCOMMAND)) &&
 375              		.loc 1 92 3 is_stmt 1 view .LVU114
  92:Src/motion/process_commands.c **** 				(rxCommands[ROLL] > (eepromConfig.maxCheck - MIDCOMMAND)) &&
 376              		.loc 1 92 17 is_stmt 0 view .LVU115
 377 021c 3E4B     		ldr	r3, .L71+8
 378 021e 93ED027A 		vldr.32	s14, [r3, #8]
  92:Src/motion/process_commands.c **** 				(rxCommands[ROLL] > (eepromConfig.maxCheck - MIDCOMMAND)) &&
 379              		.loc 1 92 38 view .LVU116
 380 0222 424B     		ldr	r3, .L71+28
 381 0224 D3ED1E7A 		vldr.32	s15, [r3, #120]
  92:Src/motion/process_commands.c **** 				(rxCommands[ROLL] > (eepromConfig.maxCheck - MIDCOMMAND)) &&
 382              		.loc 1 92 48 view .LVU117
 383 0228 DFED3F6A 		vldr.32	s13, .L71+24
 384 022c 77EEE67A 		vsub.f32	s15, s15, s13
  92:Src/motion/process_commands.c **** 				(rxCommands[ROLL] > (eepromConfig.maxCheck - MIDCOMMAND)) &&
 385              		.loc 1 92 5 view .LVU118
 386 0230 B4EEE77A 		vcmpe.f32	s14, s15
 387 0234 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 388 0238 14D5     		bpl	.L21
  93:Src/motion/process_commands.c **** 				(rxCommands[PITCH] > (eepromConfig.maxCheck - MIDCOMMAND)))
 389              		.loc 1 93 16 discriminator 1 view .LVU119
 390 023a 374B     		ldr	r3, .L71+8
 391 023c 93ED007A 		vldr.32	s14, [r3]
  93:Src/motion/process_commands.c **** 				(rxCommands[PITCH] > (eepromConfig.maxCheck - MIDCOMMAND)))
 392              		.loc 1 93 38 discriminator 1 view .LVU120
 393 0240 3A4B     		ldr	r3, .L71+28
 394 0242 D3ED1F7A 		vldr.32	s15, [r3, #124]
  93:Src/motion/process_commands.c **** 				(rxCommands[PITCH] > (eepromConfig.maxCheck - MIDCOMMAND)))
 395              		.loc 1 93 48 discriminator 1 view .LVU121
 396 0246 77EEE67A 		vsub.f32	s15, s15, s13
  92:Src/motion/process_commands.c **** 				(rxCommands[ROLL] > (eepromConfig.maxCheck - MIDCOMMAND)) &&
 397              		.loc 1 92 63 discriminator 1 view .LVU122
 398 024a B4EEE77A 		vcmpe.f32	s14, s15
 399 024e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 400 0252 07DD     		ble	.L21
  94:Src/motion/process_commands.c **** 		{
 401              		.loc 1 94 16 view .LVU123
 402 0254 304B     		ldr	r3, .L71+8
 403 0256 93ED017A 		vldr.32	s14, [r3, #4]
  93:Src/motion/process_commands.c **** 				(rxCommands[PITCH] > (eepromConfig.maxCheck - MIDCOMMAND)))
 404              		.loc 1 93 63 view .LVU124
 405 025a F4EEC77A 		vcmpe.f32	s15, s14
 406 025e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 407 0262 34D4     		bmi	.L70
 408              	.L21:
  99:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] < (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 409              		.loc 1 99 3 is_stmt 1 view .LVU125
  99:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] < (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 410              		.loc 1 99 17 is_stmt 0 view .LVU126
 411 0264 2C4B     		ldr	r3, .L71+8
 412 0266 93ED027A 		vldr.32	s14, [r3, #8]
  99:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] < (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 12


 413              		.loc 1 99 38 view .LVU127
 414 026a 304B     		ldr	r3, .L71+28
 415 026c D3ED1E7A 		vldr.32	s15, [r3, #120]
  99:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] < (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 416              		.loc 1 99 48 view .LVU128
 417 0270 DFED2D6A 		vldr.32	s13, .L71+24
 418 0274 77EEE67A 		vsub.f32	s15, s15, s13
  99:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] < (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 419              		.loc 1 99 5 view .LVU129
 420 0278 B4EEE77A 		vcmpe.f32	s14, s15
 421 027c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 422 0280 7FF751AF 		ble	.L15
 100:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 423              		.loc 1 100 16 discriminator 1 view .LVU130
 424 0284 244B     		ldr	r3, .L71+8
 425 0286 D3ED006A 		vldr.32	s13, [r3]
 100:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 426              		.loc 1 100 39 discriminator 1 view .LVU131
 427 028a 284B     		ldr	r3, .L71+28
 428 028c 93ED1F7A 		vldr.32	s14, [r3, #124]
 100:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 429              		.loc 1 100 49 discriminator 1 view .LVU132
 430 0290 9FED256A 		vldr.32	s12, .L71+24
 431 0294 37EE467A 		vsub.f32	s14, s14, s12
  99:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] < (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 432              		.loc 1 99 63 discriminator 1 view .LVU133
 433 0298 F4EEC76A 		vcmpe.f32	s13, s14
 434 029c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 435 02a0 7FF541AF 		bpl	.L15
 101:Src/motion/process_commands.c **** 		{
 436              		.loc 1 101 16 view .LVU134
 437 02a4 1C4B     		ldr	r3, .L71+8
 438 02a6 93ED017A 		vldr.32	s14, [r3, #4]
 100:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 439              		.loc 1 100 64 view .LVU135
 440 02aa F4EEC77A 		vcmpe.f32	s15, s14
 441 02ae F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 442 02b2 7FF738AF 		ble	.L15
 103:Src/motion/process_commands.c **** 			computeMPU6000RTData();
 443              		.loc 1 103 4 is_stmt 1 view .LVU136
 444 02b6 6420     		movs	r0, #100
 445 02b8 FFF7FEFF 		bl	delay
 446              	.LVL15:
 104:Src/motion/process_commands.c **** 		}
 447              		.loc 1 104 4 view .LVU137
 448 02bc FFF7FEFF 		bl	computeMPU6000RTData
 449              	.LVL16:
 450 02c0 31E7     		b	.L15
 451              	.L69:
  88:Src/motion/process_commands.c **** 			mpu6000Calibration();
 452              		.loc 1 88 4 view .LVU138
 453 02c2 6420     		movs	r0, #100
 454 02c4 FFF7FEFF 		bl	delay
 455              	.LVL17:
  89:Src/motion/process_commands.c **** 		}
 456              		.loc 1 89 4 view .LVU139
 457 02c8 FFF7FEFF 		bl	mpu6000Calibration
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 13


 458              	.LVL18:
 459 02cc A6E7     		b	.L17
 460              	.L70:
  96:Src/motion/process_commands.c **** 			initPIDvalues();
 461              		.loc 1 96 4 view .LVU140
 462 02ce 6420     		movs	r0, #100
 463 02d0 FFF7FEFF 		bl	delay
 464              	.LVL19:
  97:Src/motion/process_commands.c **** 		}
 465              		.loc 1 97 4 view .LVU141
 466 02d4 FFF7FEFF 		bl	initPIDvalues
 467              	.LVL20:
 468 02d8 C4E7     		b	.L21
 469              	.L65:
 113:Src/motion/process_commands.c **** 		armed = true;
 470              		.loc 1 113 3 view .LVU142
 471 02da FFF7FEFF 		bl	zeroPIDstates
 472              	.LVL21:
 114:Src/motion/process_commands.c **** 	}
 473              		.loc 1 114 3 view .LVU143
 114:Src/motion/process_commands.c **** 	}
 474              		.loc 1 114 9 is_stmt 0 view .LVU144
 475 02de 144B     		ldr	r3, .L71+32
 476 02e0 0122     		movs	r2, #1
 477 02e2 1A70     		strb	r2, [r3]
 478 02e4 38E7     		b	.L28
 479              	.L61:
 121:Src/motion/process_commands.c **** 
 480              		.loc 1 121 3 is_stmt 1 view .LVU145
 121:Src/motion/process_commands.c **** 
 481              		.loc 1 121 14 is_stmt 0 view .LVU146
 482 02e6 134B     		ldr	r3, .L71+36
 483 02e8 0122     		movs	r2, #1
 484 02ea 1A70     		strb	r2, [r3]
 485 02ec 42E7     		b	.L33
 486              	.L66:
 127:Src/motion/process_commands.c **** 		pidReset = false;
 487              		.loc 1 127 36 discriminator 1 view .LVU147
 488 02ee 0A4B     		ldr	r3, .L71+8
 489 02f0 93ED037A 		vldr.32	s14, [r3, #12]
 127:Src/motion/process_commands.c **** 		pidReset = false;
 490              		.loc 1 127 61 discriminator 1 view .LVU148
 491 02f4 0D4B     		ldr	r3, .L71+28
 492 02f6 D3ED207A 		vldr.32	s15, [r3, #128]
 127:Src/motion/process_commands.c **** 		pidReset = false;
 493              		.loc 1 127 22 discriminator 1 view .LVU149
 494 02fa B4EEE77A 		vcmpe.f32	s14, s15
 495 02fe F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 496 0302 7FF73DAF 		ble	.L34
 128:Src/motion/process_commands.c **** 	else
 497              		.loc 1 128 3 is_stmt 1 view .LVU150
 128:Src/motion/process_commands.c **** 	else
 498              		.loc 1 128 12 is_stmt 0 view .LVU151
 499 0306 0C4B     		ldr	r3, .L71+40
 500 0308 0022     		movs	r2, #0
 501 030a 1A70     		strb	r2, [r3]
 502 030c 3BE7     		b	.L36
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 14


 503              	.L72:
 504 030e 00BF     		.align	2
 505              	.L71:
 506 0310 00000000 		.word	rcActive
 507 0314 00000000 		.word	ibusChannels
 508 0318 00000000 		.word	.LANCHOR0
 509 031c 00000000 		.word	.LANCHOR1
 510 0320 00000000 		.word	.LANCHOR2
 511 0324 C525833F 		.word	1065559493
 512 0328 00803B45 		.word	1161527296
 513 032c 00000000 		.word	eepromConfig
 514 0330 00000000 		.word	.LANCHOR3
 515 0334 00000000 		.word	.LANCHOR5
 516 0338 00000000 		.word	pidReset
 517 033c 00000000 		.word	.LANCHOR6
 518 0340 00000000 		.word	.LANCHOR4
 519              	.L67:
 138:Src/motion/process_commands.c **** 	{
 520              		.loc 1 138 10 view .LVU152
 521 0344 1B4B     		ldr	r3, .L73
 522 0346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 137:Src/motion/process_commands.c **** 		(armed == false))
 523              		.loc 1 137 19 view .LVU153
 524 0348 002B     		cmp	r3, #0
 525 034a 7FF42BAF 		bne	.L37
 140:Src/motion/process_commands.c **** 		setPIDstates(ROLL_ATT_PID,  0.0f);
 526              		.loc 1 140 3 is_stmt 1 view .LVU154
 140:Src/motion/process_commands.c **** 		setPIDstates(ROLL_ATT_PID,  0.0f);
 527              		.loc 1 140 8 is_stmt 0 view .LVU155
 528 034e 1A4B     		ldr	r3, .L73+4
 529 0350 0022     		movs	r2, #0
 530 0352 1A70     		strb	r2, [r3]
 141:Src/motion/process_commands.c **** 		setPIDstates(PITCH_ATT_PID, 0.0f);
 531              		.loc 1 141 3 is_stmt 1 view .LVU156
 532 0354 9FED198A 		vldr.32	s16, .L73+8
 533 0358 B0EE480A 		vmov.f32	s0, s16
 534 035c 0320     		movs	r0, #3
 535 035e FFF7FEFF 		bl	setPIDstates
 536              	.LVL22:
 142:Src/motion/process_commands.c **** 		setPIDstates(HEADING_PID,   0.0f);
 537              		.loc 1 142 3 view .LVU157
 538 0362 B0EE480A 		vmov.f32	s0, s16
 539 0366 0420     		movs	r0, #4
 540 0368 FFF7FEFF 		bl	setPIDstates
 541              	.LVL23:
 143:Src/motion/process_commands.c **** 
 542              		.loc 1 143 3 view .LVU158
 543 036c B0EE480A 		vmov.f32	s0, s16
 544 0370 0520     		movs	r0, #5
 545 0372 FFF7FEFF 		bl	setPIDstates
 546              	.LVL24:
 145:Src/motion/process_commands.c **** 	}
 547              		.loc 1 145 3 view .LVU159
 548 0376 FFF7FEFF 		bl	modeTransition
 549              	.LVL25:
 550 037a 1FE7     		b	.L1
 551              	.L68:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 15


 149:Src/motion/process_commands.c **** 	{
 552              		.loc 1 149 12 is_stmt 0 view .LVU160
 553 037c 0D4B     		ldr	r3, .L73
 554 037e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 148:Src/motion/process_commands.c **** 			 (armed == false))
 555              		.loc 1 148 22 view .LVU161
 556 0380 002B     		cmp	r3, #0
 557 0382 7FF41BAF 		bne	.L1
 151:Src/motion/process_commands.c **** 		setPIDstates(ROLL_ATT_PID,  0.0f);
 558              		.loc 1 151 3 is_stmt 1 view .LVU162
 151:Src/motion/process_commands.c **** 		setPIDstates(ROLL_ATT_PID,  0.0f);
 559              		.loc 1 151 8 is_stmt 0 view .LVU163
 560 0386 0C4B     		ldr	r3, .L73+4
 561 0388 0222     		movs	r2, #2
 562 038a 1A70     		strb	r2, [r3]
 152:Src/motion/process_commands.c **** 		setPIDstates(PITCH_ATT_PID, 0.0f);
 563              		.loc 1 152 3 is_stmt 1 view .LVU164
 564 038c 9FED0B8A 		vldr.32	s16, .L73+8
 565 0390 B0EE480A 		vmov.f32	s0, s16
 566 0394 0320     		movs	r0, #3
 567 0396 FFF7FEFF 		bl	setPIDstates
 568              	.LVL26:
 153:Src/motion/process_commands.c **** 		setPIDstates(HEADING_PID,   0.0f);
 569              		.loc 1 153 3 view .LVU165
 570 039a B0EE480A 		vmov.f32	s0, s16
 571 039e 0420     		movs	r0, #4
 572 03a0 FFF7FEFF 		bl	setPIDstates
 573              	.LVL27:
 154:Src/motion/process_commands.c **** 
 574              		.loc 1 154 3 view .LVU166
 575 03a4 B0EE480A 		vmov.f32	s0, s16
 576 03a8 0520     		movs	r0, #5
 577 03aa FFF7FEFF 		bl	setPIDstates
 578              	.LVL28:
 156:Src/motion/process_commands.c **** 	}
 579              		.loc 1 156 3 view .LVU167
 580 03ae FFF7FEFF 		bl	modeTransition
 581              	.LVL29:
 582              		.loc 1 158 1 is_stmt 0 view .LVU168
 583 03b2 03E7     		b	.L1
 584              	.L74:
 585              		.align	2
 586              	.L73:
 587 03b4 00000000 		.word	.LANCHOR3
 588 03b8 00000000 		.word	.LANCHOR6
 589 03bc 00000000 		.word	0
 590              		.cfi_endproc
 591              	.LFE187:
 593              		.global	rxCommands
 594              		.global	disarmingTimer
 595              		.global	armingTimer
 596              		.global	armed
 597              		.global	flightMode
 598              		.global	mode
 599              		.global	previousCommandInDetent
 600              		.global	commandInDetent
 601              		.section	.bss.armed,"aw",%nobits
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 16


 602              		.set	.LANCHOR3,. + 0
 605              	armed:
 606 0000 00       		.space	1
 607              		.section	.bss.armingTimer,"aw",%nobits
 610              	armingTimer:
 611 0000 00       		.space	1
 612              		.section	.bss.disarmingTimer,"aw",%nobits
 613              		.set	.LANCHOR4,. + 0
 616              	disarmingTimer:
 617 0000 00       		.space	1
 618              		.section	.bss.mode,"aw",%nobits
 619              		.set	.LANCHOR6,. + 0
 622              	mode:
 623 0000 00       		.space	1
 624              		.section	.bss.rxCommands,"aw",%nobits
 625              		.align	2
 626              		.set	.LANCHOR0,. + 0
 629              	rxCommands:
 630 0000 00000000 		.space	32
 630      00000000 
 630      00000000 
 630      00000000 
 630      00000000 
 631              		.section	.data.commandInDetent,"aw"
 632              		.align	2
 633              		.set	.LANCHOR1,. + 0
 636              	commandInDetent:
 637 0000 010101   		.ascii	"\001\001\001"
 638              		.section	.data.flightMode,"aw"
 639              		.set	.LANCHOR5,. + 0
 642              	flightMode:
 643 0000 01       		.byte	1
 644              		.section	.data.previousCommandInDetent,"aw"
 645              		.align	2
 646              		.set	.LANCHOR2,. + 0
 649              	previousCommandInDetent:
 650 0000 010101   		.ascii	"\001\001\001"
 651              		.text
 652              	.Letext0:
 653              		.file 2 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 654              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 655              		.file 4 "Src/pid.h"
 656              		.file 5 "Src/baredrones32.h"
 657              		.file 6 "Src/motion/process_commands.h"
 658              		.file 7 "Src/sensors/ibus.h"
 659              		.file 8 "Src/drv/drv_system.h"
 660              		.file 9 "Src/sensors/mpu6000.h"
 661              		.file 10 "Src/sensors/mpu6000_calibration.h"
 662              		.file 11 "Src/motion/transition.h"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 process_commands.c
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:18     .text.processCommands:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:26     .text.processCommands:0000000000000000 processCommands
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:506    .text.processCommands:0000000000000310 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:521    .text.processCommands:0000000000000344 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:587    .text.processCommands:00000000000003b4 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:629    .bss.rxCommands:0000000000000000 rxCommands
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:616    .bss.disarmingTimer:0000000000000000 disarmingTimer
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:610    .bss.armingTimer:0000000000000000 armingTimer
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:605    .bss.armed:0000000000000000 armed
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:642    .data.flightMode:0000000000000000 flightMode
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:622    .bss.mode:0000000000000000 mode
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:649    .data.previousCommandInDetent:0000000000000000 previousCommandInDetent
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:636    .data.commandInDetent:0000000000000000 commandInDetent
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:606    .bss.armed:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:611    .bss.armingTimer:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:617    .bss.disarmingTimer:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:623    .bss.mode:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:625    .bss.rxCommands:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:632    .data.commandInDetent:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccv05AKO.s:645    .data.previousCommandInDetent:0000000000000000 $d

UNDEFINED SYMBOLS
zeroPIDstates
delay
computeMPU6000RTData
mpu6000Calibration
initPIDvalues
rcActive
ibusChannels
eepromConfig
pidReset
setPIDstates
modeTransition
