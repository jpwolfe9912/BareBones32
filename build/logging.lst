ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjOUPYr.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"logging.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_f2d
  18              		.section	.rodata.printLog.str1.4,"aMS",%progbits,1
  19              		.align	2
  20              	.LC0:
  21 0000 25640925 		.ascii	"%d\011%.3f\011%d\011%.3f\011%.3f\011%.2f\011%.3f\011"
  21      2E336609 
  21      25640925 
  21      2E336609 
  21      252E3366 
  22 001f 252E3366 		.ascii	"%.3f\011%.3f\012\000"
  22      09252E33 
  22      660A00
  23              		.section	.text.printLog,"ax",%progbits
  24              		.align	1
  25              		.global	printLog
  26              		.arch armv7e-m
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  30              		.fpu fpv5-sp-d16
  32              	printLog:
  33              	.LFB187:
  34              		.file 1 "Src/logging.c"
   1:Src/logging.c **** /** @file 		logging.c
   2:Src/logging.c ****  *  @brief
   3:Src/logging.c ****  *  	This file logs data to the terminal if connected.
   4:Src/logging.c ****  *
   5:Src/logging.c ****  *  @author 	Jeremy Wolfe
   6:Src/logging.c ****  *  @date 		07 APR 2022
   7:Src/logging.c ****  */
   8:Src/logging.c **** 
   9:Src/logging.c **** #include "board.h"
  10:Src/logging.c **** 
  11:Src/logging.c **** uint8_t log_count = 0;
  12:Src/logging.c **** char *logData = (char *)0x20011000;
  13:Src/logging.c **** 
  14:Src/logging.c **** /* Static Functions */
  15:Src/logging.c **** static void writeLog(char *pLog);
  16:Src/logging.c **** 
  17:Src/logging.c **** /** @brief Prints logging data to OpenLager based on which type of data you want.
  18:Src/logging.c ****  *
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjOUPYr.s 			page 2


  19:Src/logging.c ****  *	@param logType The type of data you want.
  20:Src/logging.c ****  *  @return Void.
  21:Src/logging.c ****  */
  22:Src/logging.c **** void printLog(void)
  23:Src/logging.c **** {
  35              		.loc 1 23 1 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  40              		.cfi_def_cfa_offset 36
  41              		.cfi_offset 4, -36
  42              		.cfi_offset 5, -32
  43              		.cfi_offset 6, -28
  44              		.cfi_offset 7, -24
  45              		.cfi_offset 8, -20
  46              		.cfi_offset 9, -16
  47              		.cfi_offset 10, -12
  48              		.cfi_offset 11, -8
  49              		.cfi_offset 14, -4
  50 0004 8FB0     		sub	sp, sp, #60
  51              		.cfi_def_cfa_offset 96
  24:Src/logging.c ****     logs_t logType = PITCH;
  52              		.loc 1 24 5 view .LVU1
  53              	.LVL0:
  25:Src/logging.c **** #ifdef OPENLAGER
  26:Src/logging.c ****     memset(logData, '\0', LOG_SIZE);
  27:Src/logging.c **** 
  28:Src/logging.c ****     if (logType < 3)
  29:Src/logging.c ****     {
  30:Src/logging.c ****         sprintf(logData, "%d %.3f %d %.3f %.3f %.3f %.3f %.3f %.3f \n",
  31:Src/logging.c ****                 logType,
  32:Src/logging.c ****                 battVoltage,
  33:Src/logging.c ****                 flightMode,
  34:Src/logging.c ****                 rateCmd[logType],
  35:Src/logging.c ****                 sensors.gyro500Hz[logType],
  36:Src/logging.c ****                 ratePID[logType],
  37:Src/logging.c ****                 attCmd[logType],
  38:Src/logging.c ****                 sensors.attitude500Hz[logType],
  39:Src/logging.c ****                 attPID[logType]);
  40:Src/logging.c ****     }
  41:Src/logging.c **** 
  42:Src/logging.c ****     if (logType == 3)
  43:Src/logging.c ****     {
  44:Src/logging.c ****         sprintf(logData, "%d %f %d %u %u %u %u \r",
  45:Src/logging.c ****                 logType,
  46:Src/logging.c ****                 battVoltage,
  47:Src/logging.c ****                 flightMode,
  48:Src/logging.c ****                 motor_value[MOTOR1],
  49:Src/logging.c ****                 motor_value[MOTOR2],
  50:Src/logging.c ****                 motor_value[MOTOR3],
  51:Src/logging.c ****                 motor_value[MOTOR4]);
  52:Src/logging.c ****     }
  53:Src/logging.c ****     writeLog(logData);
  54:Src/logging.c **** 
  55:Src/logging.c **** #else
  56:Src/logging.c ****     if (logType < 3)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjOUPYr.s 			page 3


  54              		.loc 1 56 5 view .LVU2
  57:Src/logging.c ****     {
  58:Src/logging.c ****         printf("%d\t%.3f\t%d\t%.3f\t%.3f\t%.2f\t%.3f\t%.3f\t%.3f\n",
  55              		.loc 1 58 9 view .LVU3
  59:Src/logging.c ****                logType,
  60:Src/logging.c ****                battVoltage,
  61:Src/logging.c ****                flightMode,
  62:Src/logging.c ****                rateCmd[logType],
  56              		.loc 1 62 23 is_stmt 0 view .LVU4
  57 0006 1F4B     		ldr	r3, .L3
  58 0008 5E68     		ldr	r6, [r3, #4]	@ float
  63:Src/logging.c ****                sensors.gyro500Hz[logType],
  59              		.loc 1 63 33 view .LVU5
  60 000a 1F4B     		ldr	r3, .L3+4
  61 000c 9F6A     		ldr	r7, [r3, #40]	@ float
  64:Src/logging.c ****                ratePID[logType],
  62              		.loc 1 64 23 view .LVU6
  63 000e 1F4A     		ldr	r2, .L3+8
  64 0010 D2F80480 		ldr	r8, [r2, #4]	@ float
  65:Src/logging.c ****                attCmd[logType],
  65              		.loc 1 65 22 view .LVU7
  66 0014 1E4A     		ldr	r2, .L3+12
  67 0016 D2F80490 		ldr	r9, [r2, #4]	@ float
  66:Src/logging.c ****                sensors.attitude500Hz[logType],
  68              		.loc 1 66 37 view .LVU8
  69 001a D3F81CA0 		ldr	r10, [r3, #28]	@ float
  67:Src/logging.c ****                attPID[logType]);
  70              		.loc 1 67 22 view .LVU9
  71 001e 1D4B     		ldr	r3, .L3+16
  72 0020 D3F804B0 		ldr	fp, [r3, #4]	@ float
  58:Src/logging.c ****                logType,
  73              		.loc 1 58 9 view .LVU10
  74 0024 1C4B     		ldr	r3, .L3+20
  75 0026 1868     		ldr	r0, [r3]	@ float
  76 0028 FFF7FEFF 		bl	__aeabi_f2d
  77              	.LVL1:
  78 002c 0446     		mov	r4, r0
  79 002e 0D46     		mov	r5, r1
  80 0030 5846     		mov	r0, fp	@ float
  81 0032 FFF7FEFF 		bl	__aeabi_f2d
  82              	.LVL2:
  83 0036 CDE90C01 		strd	r0, [sp, #48]
  84 003a 5046     		mov	r0, r10	@ float
  85 003c FFF7FEFF 		bl	__aeabi_f2d
  86              	.LVL3:
  87 0040 CDE90A01 		strd	r0, [sp, #40]
  88 0044 4846     		mov	r0, r9	@ float
  89 0046 FFF7FEFF 		bl	__aeabi_f2d
  90              	.LVL4:
  91 004a CDE90801 		strd	r0, [sp, #32]
  92 004e 4046     		mov	r0, r8	@ float
  93 0050 FFF7FEFF 		bl	__aeabi_f2d
  94              	.LVL5:
  95 0054 CDE90601 		strd	r0, [sp, #24]
  96 0058 3846     		mov	r0, r7	@ float
  97 005a FFF7FEFF 		bl	__aeabi_f2d
  98              	.LVL6:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjOUPYr.s 			page 4


  99 005e CDE90401 		strd	r0, [sp, #16]
 100 0062 3046     		mov	r0, r6	@ float
 101 0064 FFF7FEFF 		bl	__aeabi_f2d
 102              	.LVL7:
 103 0068 CDE90201 		strd	r0, [sp, #8]
 104 006c 0B4B     		ldr	r3, .L3+24
 105 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 106 0070 0093     		str	r3, [sp]
 107 0072 2246     		mov	r2, r4
 108 0074 2B46     		mov	r3, r5
 109 0076 0121     		movs	r1, #1
 110 0078 0948     		ldr	r0, .L3+28
 111 007a FFF7FEFF 		bl	printf
 112              	.LVL8:
  68:Src/logging.c ****     }
  69:Src/logging.c **** 
  70:Src/logging.c ****     if (logType == 3)
 113              		.loc 1 70 5 is_stmt 1 view .LVU11
  71:Src/logging.c ****     {
  72:Src/logging.c ****         printf("%d %f %d %u %u %u %u \r",
  73:Src/logging.c ****                logType,
  74:Src/logging.c ****                battVoltage,
  75:Src/logging.c ****                flightMode,
  76:Src/logging.c ****                motor_value[MOTOR1],
  77:Src/logging.c ****                motor_value[MOTOR2],
  78:Src/logging.c ****                motor_value[MOTOR3],
  79:Src/logging.c ****                motor_value[MOTOR4]);
  80:Src/logging.c ****     }
  81:Src/logging.c **** #endif
  82:Src/logging.c **** }
 114              		.loc 1 82 1 is_stmt 0 view .LVU12
 115 007e 0FB0     		add	sp, sp, #60
 116              		.cfi_def_cfa_offset 36
 117              		@ sp needed
 118 0080 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 119              	.L4:
 120              		.align	2
 121              	.L3:
 122 0084 00000000 		.word	rateCmd
 123 0088 00000000 		.word	sensors
 124 008c 00000000 		.word	ratePID
 125 0090 00000000 		.word	attCmd
 126 0094 00000000 		.word	attPID
 127 0098 00000000 		.word	battVoltage
 128 009c 00000000 		.word	flightMode
 129 00a0 00000000 		.word	.LC0
 130              		.cfi_endproc
 131              	.LFE187:
 133              		.global	logData
 134              		.global	log_count
 135              		.section	.bss.log_count,"aw",%nobits
 138              	log_count:
 139 0000 00       		.space	1
 140              		.section	.data.logData,"aw"
 141              		.align	2
 144              	logData:
 145 0000 00100120 		.word	536940544
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjOUPYr.s 			page 5


 146              		.text
 147              	.Letext0:
 148              		.file 2 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 149              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 150              		.file 4 "Src/baredrones32.h"
 151              		.file 5 "Src/battery.h"
 152              		.file 6 "Src/logging.h"
 153              		.file 7 "Src/motion/process_commands.h"
 154              		.file 8 "Src/motion/compute_axis_commands.h"
 155              		.file 9 "Src/motors.h"
 156              		.file 10 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdio.h"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjOUPYr.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 logging.c
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjOUPYr.s:19     .rodata.printLog.str1.4:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjOUPYr.s:24     .text.printLog:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjOUPYr.s:32     .text.printLog:0000000000000000 printLog
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjOUPYr.s:122    .text.printLog:0000000000000084 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjOUPYr.s:144    .data.logData:0000000000000000 logData
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjOUPYr.s:138    .bss.log_count:0000000000000000 log_count
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjOUPYr.s:139    .bss.log_count:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccjOUPYr.s:141    .data.logData:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
printf
rateCmd
sensors
ratePID
attCmd
attPID
battVoltage
flightMode
