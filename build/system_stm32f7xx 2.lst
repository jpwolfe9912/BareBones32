ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f7xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	1
  19              		.global	SystemInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-sp-d16
  26              	SystemInit:
  27              	.LFB141:
  28              		.file 1 "Src/system_stm32f7xx.c"
   1:Src/system_stm32f7xx.c **** /**
   2:Src/system_stm32f7xx.c ****   ******************************************************************************
   3:Src/system_stm32f7xx.c ****   * @file    system_stm32f7xx.c
   4:Src/system_stm32f7xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32f7xx.c ****   * @brief   CMSIS Cortex-M7 Device Peripheral Access Layer System Source File.
   6:Src/system_stm32f7xx.c ****   *
   7:Src/system_stm32f7xx.c ****   *   This file provides two functions and one global variable to be called from 
   8:Src/system_stm32f7xx.c ****   *   user application:
   9:Src/system_stm32f7xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  10:Src/system_stm32f7xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32f7xx.c ****   *                      the "startup_stm32f7xx.s" file.
  12:Src/system_stm32f7xx.c ****   *
  13:Src/system_stm32f7xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32f7xx.c ****   *                                  by the user application to setup the SysTick 
  15:Src/system_stm32f7xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32f7xx.c ****   *                                     
  17:Src/system_stm32f7xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32f7xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32f7xx.c ****   *                                 during program execution.
  20:Src/system_stm32f7xx.c ****   *
  21:Src/system_stm32f7xx.c ****   *
  22:Src/system_stm32f7xx.c ****   ******************************************************************************
  23:Src/system_stm32f7xx.c ****   * @attention
  24:Src/system_stm32f7xx.c ****   *
  25:Src/system_stm32f7xx.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  26:Src/system_stm32f7xx.c ****   * All rights reserved.</center></h2>
  27:Src/system_stm32f7xx.c ****   *
  28:Src/system_stm32f7xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  29:Src/system_stm32f7xx.c ****   * the "License"; You may not use this file except in compliance with the
  30:Src/system_stm32f7xx.c ****   * License. You may obtain a copy of the License at:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s 			page 2


  31:Src/system_stm32f7xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  32:Src/system_stm32f7xx.c ****   *
  33:Src/system_stm32f7xx.c ****   ******************************************************************************
  34:Src/system_stm32f7xx.c ****   */
  35:Src/system_stm32f7xx.c **** 
  36:Src/system_stm32f7xx.c **** /** @addtogroup CMSIS
  37:Src/system_stm32f7xx.c ****   * @{
  38:Src/system_stm32f7xx.c ****   */
  39:Src/system_stm32f7xx.c **** 
  40:Src/system_stm32f7xx.c **** /** @addtogroup stm32f7xx_system
  41:Src/system_stm32f7xx.c ****   * @{
  42:Src/system_stm32f7xx.c ****   */  
  43:Src/system_stm32f7xx.c ****   
  44:Src/system_stm32f7xx.c **** /** @addtogroup STM32F7xx_System_Private_Includes
  45:Src/system_stm32f7xx.c ****   * @{
  46:Src/system_stm32f7xx.c ****   */
  47:Src/system_stm32f7xx.c **** 
  48:Src/system_stm32f7xx.c **** #include "../Libraries/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
  49:Src/system_stm32f7xx.c **** 
  50:Src/system_stm32f7xx.c **** #if !defined  (HSE_VALUE) 
  51:Src/system_stm32f7xx.c ****   #define HSE_VALUE    ((uint32_t)25000000) /*!< Default value of the External oscillator in Hz */
  52:Src/system_stm32f7xx.c **** #endif /* HSE_VALUE */
  53:Src/system_stm32f7xx.c **** 
  54:Src/system_stm32f7xx.c **** #if !defined  (HSI_VALUE)
  55:Src/system_stm32f7xx.c ****   #define HSI_VALUE    ((uint32_t)16000000) /*!< Value of the Internal oscillator in Hz*/
  56:Src/system_stm32f7xx.c **** #endif /* HSI_VALUE */
  57:Src/system_stm32f7xx.c **** 
  58:Src/system_stm32f7xx.c **** /**
  59:Src/system_stm32f7xx.c ****   * @}
  60:Src/system_stm32f7xx.c ****   */
  61:Src/system_stm32f7xx.c **** 
  62:Src/system_stm32f7xx.c **** /** @addtogroup STM32F7xx_System_Private_TypesDefinitions
  63:Src/system_stm32f7xx.c ****   * @{
  64:Src/system_stm32f7xx.c ****   */
  65:Src/system_stm32f7xx.c **** 
  66:Src/system_stm32f7xx.c **** /**
  67:Src/system_stm32f7xx.c ****   * @}
  68:Src/system_stm32f7xx.c ****   */
  69:Src/system_stm32f7xx.c **** 
  70:Src/system_stm32f7xx.c **** /** @addtogroup STM32F7xx_System_Private_Defines
  71:Src/system_stm32f7xx.c ****   * @{
  72:Src/system_stm32f7xx.c ****   */
  73:Src/system_stm32f7xx.c **** 
  74:Src/system_stm32f7xx.c **** /************************* Miscellaneous Configuration ************************/
  75:Src/system_stm32f7xx.c **** 
  76:Src/system_stm32f7xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  77:Src/system_stm32f7xx.c ****          configuration. */
  78:Src/system_stm32f7xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  79:Src/system_stm32f7xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
  80:Src/system_stm32f7xx.c ****      remap of boot address selected */
  81:Src/system_stm32f7xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  82:Src/system_stm32f7xx.c **** 
  83:Src/system_stm32f7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
  84:Src/system_stm32f7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  85:Src/system_stm32f7xx.c ****      in Sram else user remap will be done in Flash. */
  86:Src/system_stm32f7xx.c **** /* #define VECT_TAB_SRAM */
  87:Src/system_stm32f7xx.c **** #if defined(VECT_TAB_SRAM)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s 			page 3


  88:Src/system_stm32f7xx.c **** #define VECT_TAB_BASE_ADDRESS   RAMDTCM_BASE    /*!< Vector Table base address field.
  89:Src/system_stm32f7xx.c ****                                                      This value must be a multiple of 0x200. */
  90:Src/system_stm32f7xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
  91:Src/system_stm32f7xx.c ****                                                      This value must be a multiple of 0x200. */
  92:Src/system_stm32f7xx.c **** #else
  93:Src/system_stm32f7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
  94:Src/system_stm32f7xx.c ****                                                      This value must be a multiple of 0x200. */
  95:Src/system_stm32f7xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
  96:Src/system_stm32f7xx.c ****                                                      This value must be a multiple of 0x200. */
  97:Src/system_stm32f7xx.c **** #endif /* VECT_TAB_SRAM */
  98:Src/system_stm32f7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
  99:Src/system_stm32f7xx.c **** /******************************************************************************/
 100:Src/system_stm32f7xx.c **** 
 101:Src/system_stm32f7xx.c **** /**
 102:Src/system_stm32f7xx.c ****   * @}
 103:Src/system_stm32f7xx.c ****   */
 104:Src/system_stm32f7xx.c **** 
 105:Src/system_stm32f7xx.c **** /** @addtogroup STM32F7xx_System_Private_Macros
 106:Src/system_stm32f7xx.c ****   * @{
 107:Src/system_stm32f7xx.c ****   */
 108:Src/system_stm32f7xx.c **** 
 109:Src/system_stm32f7xx.c **** /**
 110:Src/system_stm32f7xx.c ****   * @}
 111:Src/system_stm32f7xx.c ****   */
 112:Src/system_stm32f7xx.c **** 
 113:Src/system_stm32f7xx.c **** /** @addtogroup STM32F7xx_System_Private_Variables
 114:Src/system_stm32f7xx.c ****   * @{
 115:Src/system_stm32f7xx.c ****   */
 116:Src/system_stm32f7xx.c **** 
 117:Src/system_stm32f7xx.c ****   /* This variable is updated in three ways:
 118:Src/system_stm32f7xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 119:Src/system_stm32f7xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 120:Src/system_stm32f7xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 121:Src/system_stm32f7xx.c ****          Note: If you use this function to configure the system clock; then there
 122:Src/system_stm32f7xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 123:Src/system_stm32f7xx.c ****                variable is updated automatically.
 124:Src/system_stm32f7xx.c ****   */
 125:Src/system_stm32f7xx.c ****   uint32_t SystemCoreClock = 216000000;
 126:Src/system_stm32f7xx.c ****   const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 127:Src/system_stm32f7xx.c ****   const uint8_t APBPrescTable[8] = {0, 0, 0, 0, 1, 2, 3, 4};
 128:Src/system_stm32f7xx.c **** 
 129:Src/system_stm32f7xx.c **** /**
 130:Src/system_stm32f7xx.c ****   * @}
 131:Src/system_stm32f7xx.c ****   */
 132:Src/system_stm32f7xx.c **** 
 133:Src/system_stm32f7xx.c **** /** @addtogroup STM32F7xx_System_Private_FunctionPrototypes
 134:Src/system_stm32f7xx.c ****   * @{
 135:Src/system_stm32f7xx.c ****   */
 136:Src/system_stm32f7xx.c **** 
 137:Src/system_stm32f7xx.c **** /**
 138:Src/system_stm32f7xx.c ****   * @}
 139:Src/system_stm32f7xx.c ****   */
 140:Src/system_stm32f7xx.c **** 
 141:Src/system_stm32f7xx.c **** /** @addtogroup STM32F7xx_System_Private_Functions
 142:Src/system_stm32f7xx.c ****   * @{
 143:Src/system_stm32f7xx.c ****   */
 144:Src/system_stm32f7xx.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s 			page 4


 145:Src/system_stm32f7xx.c **** /**
 146:Src/system_stm32f7xx.c ****   * @brief  Setup the microcontroller system
 147:Src/system_stm32f7xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 148:Src/system_stm32f7xx.c ****   *         SystemFrequency variable.
 149:Src/system_stm32f7xx.c ****   * @param  None
 150:Src/system_stm32f7xx.c ****   * @retval None
 151:Src/system_stm32f7xx.c ****   */
 152:Src/system_stm32f7xx.c **** void SystemInit(void)
 153:Src/system_stm32f7xx.c **** {
  29              		.loc 1 153 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 154:Src/system_stm32f7xx.c ****   /* FPU settings ------------------------------------------------------------*/
 155:Src/system_stm32f7xx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 156:Src/system_stm32f7xx.c ****   SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  34              		.loc 1 156 3 view .LVU1
  35              		.loc 1 156 14 is_stmt 0 view .LVU2
  36 0000 034A     		ldr	r2, .L2
  37 0002 D2F88830 		ldr	r3, [r2, #136]
  38 0006 43F47003 		orr	r3, r3, #15728640
  39 000a C2F88830 		str	r3, [r2, #136]
 157:Src/system_stm32f7xx.c **** #endif
 158:Src/system_stm32f7xx.c **** 
 159:Src/system_stm32f7xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 160:Src/system_stm32f7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 161:Src/system_stm32f7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM 
 162:Src/system_stm32f7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 163:Src/system_stm32f7xx.c **** }
  40              		.loc 1 163 1 view .LVU3
  41 000e 7047     		bx	lr
  42              	.L3:
  43              		.align	2
  44              	.L2:
  45 0010 00ED00E0 		.word	-536810240
  46              		.cfi_endproc
  47              	.LFE141:
  49              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  50              		.align	1
  51              		.global	SystemCoreClockUpdate
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv5-sp-d16
  57              	SystemCoreClockUpdate:
  58              	.LFB142:
 164:Src/system_stm32f7xx.c **** 
 165:Src/system_stm32f7xx.c **** /**
 166:Src/system_stm32f7xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 167:Src/system_stm32f7xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 168:Src/system_stm32f7xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 169:Src/system_stm32f7xx.c ****   *         other parameters.
 170:Src/system_stm32f7xx.c ****   *           
 171:Src/system_stm32f7xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 172:Src/system_stm32f7xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 173:Src/system_stm32f7xx.c ****   *         based on this variable will be incorrect.         
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s 			page 5


 174:Src/system_stm32f7xx.c ****   *     
 175:Src/system_stm32f7xx.c ****   * @note   - The system frequency computed by this function is not the real 
 176:Src/system_stm32f7xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 177:Src/system_stm32f7xx.c ****   *           constant and the selected clock source:
 178:Src/system_stm32f7xx.c ****   *             
 179:Src/system_stm32f7xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 180:Src/system_stm32f7xx.c ****   *                                              
 181:Src/system_stm32f7xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 182:Src/system_stm32f7xx.c ****   *                          
 183:Src/system_stm32f7xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 184:Src/system_stm32f7xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 185:Src/system_stm32f7xx.c ****   *         
 186:Src/system_stm32f7xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f7xx_hal_conf.h file (default value
 187:Src/system_stm32f7xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 188:Src/system_stm32f7xx.c ****   *             in voltage and temperature.   
 189:Src/system_stm32f7xx.c ****   *    
 190:Src/system_stm32f7xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f7xx_hal_conf.h file (default value
 191:Src/system_stm32f7xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 192:Src/system_stm32f7xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 193:Src/system_stm32f7xx.c ****   *              have wrong result.
 194:Src/system_stm32f7xx.c ****   *                
 195:Src/system_stm32f7xx.c ****   *         - The result of this function could be not correct when using fractional
 196:Src/system_stm32f7xx.c ****   *           value for HSE crystal.
 197:Src/system_stm32f7xx.c ****   *     
 198:Src/system_stm32f7xx.c ****   * @param  None
 199:Src/system_stm32f7xx.c ****   * @retval None
 200:Src/system_stm32f7xx.c ****   */
 201:Src/system_stm32f7xx.c **** void SystemCoreClockUpdate(void)
 202:Src/system_stm32f7xx.c **** {
  59              		.loc 1 202 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 203:Src/system_stm32f7xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
  64              		.loc 1 203 3 view .LVU5
  65              	.LVL0:
 204:Src/system_stm32f7xx.c ****   
 205:Src/system_stm32f7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 206:Src/system_stm32f7xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
  66              		.loc 1 206 3 view .LVU6
  67              		.loc 1 206 12 is_stmt 0 view .LVU7
  68 0000 224B     		ldr	r3, .L12
  69 0002 9B68     		ldr	r3, [r3, #8]
  70              		.loc 1 206 7 view .LVU8
  71 0004 03F00C03 		and	r3, r3, #12
  72              	.LVL1:
 207:Src/system_stm32f7xx.c **** 
 208:Src/system_stm32f7xx.c ****   switch (tmp)
  73              		.loc 1 208 3 is_stmt 1 view .LVU9
  74 0008 042B     		cmp	r3, #4
  75 000a 14D0     		beq	.L5
  76 000c 082B     		cmp	r3, #8
  77 000e 16D0     		beq	.L6
  78 0010 1BB1     		cbz	r3, .L11
 209:Src/system_stm32f7xx.c ****   {
 210:Src/system_stm32f7xx.c ****     case 0x00:  /* HSI used as system clock source */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s 			page 6


 211:Src/system_stm32f7xx.c ****       SystemCoreClock = HSI_VALUE;
 212:Src/system_stm32f7xx.c ****       break;
 213:Src/system_stm32f7xx.c ****     case 0x04:  /* HSE used as system clock source */
 214:Src/system_stm32f7xx.c ****       SystemCoreClock = HSE_VALUE;
 215:Src/system_stm32f7xx.c ****       break;
 216:Src/system_stm32f7xx.c ****     case 0x08:  /* PLL used as system clock source */
 217:Src/system_stm32f7xx.c **** 
 218:Src/system_stm32f7xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 219:Src/system_stm32f7xx.c ****          SYSCLK = PLL_VCO / PLL_P
 220:Src/system_stm32f7xx.c ****          */    
 221:Src/system_stm32f7xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 222:Src/system_stm32f7xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 223:Src/system_stm32f7xx.c ****       
 224:Src/system_stm32f7xx.c ****       if (pllsource != 0)
 225:Src/system_stm32f7xx.c ****       {
 226:Src/system_stm32f7xx.c ****         /* HSE used as PLL clock source */
 227:Src/system_stm32f7xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 228:Src/system_stm32f7xx.c ****       }
 229:Src/system_stm32f7xx.c ****       else
 230:Src/system_stm32f7xx.c ****       {
 231:Src/system_stm32f7xx.c ****         /* HSI used as PLL clock source */
 232:Src/system_stm32f7xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 233:Src/system_stm32f7xx.c ****       }
 234:Src/system_stm32f7xx.c **** 
 235:Src/system_stm32f7xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 236:Src/system_stm32f7xx.c ****       SystemCoreClock = pllvco/pllp;
 237:Src/system_stm32f7xx.c ****       break;
 238:Src/system_stm32f7xx.c ****     default:
 239:Src/system_stm32f7xx.c ****       SystemCoreClock = HSI_VALUE;
  79              		.loc 1 239 7 view .LVU10
  80              		.loc 1 239 23 is_stmt 0 view .LVU11
  81 0012 1F4B     		ldr	r3, .L12+4
  82              	.LVL2:
  83              		.loc 1 239 23 view .LVU12
  84 0014 1F4A     		ldr	r2, .L12+8
  85 0016 1A60     		str	r2, [r3]
 240:Src/system_stm32f7xx.c ****       break;
  86              		.loc 1 240 7 is_stmt 1 view .LVU13
  87 0018 02E0     		b	.L8
  88              	.LVL3:
  89              	.L11:
 211:Src/system_stm32f7xx.c ****       break;
  90              		.loc 1 211 7 view .LVU14
 211:Src/system_stm32f7xx.c ****       break;
  91              		.loc 1 211 23 is_stmt 0 view .LVU15
  92 001a 1D4B     		ldr	r3, .L12+4
  93              	.LVL4:
 211:Src/system_stm32f7xx.c ****       break;
  94              		.loc 1 211 23 view .LVU16
  95 001c 1D4A     		ldr	r2, .L12+8
  96 001e 1A60     		str	r2, [r3]
 212:Src/system_stm32f7xx.c ****     case 0x04:  /* HSE used as system clock source */
  97              		.loc 1 212 7 is_stmt 1 view .LVU17
  98              	.LVL5:
  99              	.L8:
 241:Src/system_stm32f7xx.c ****   }
 242:Src/system_stm32f7xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s 			page 7


 243:Src/system_stm32f7xx.c ****   /* Get HCLK prescaler */
 244:Src/system_stm32f7xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 100              		.loc 1 244 3 view .LVU18
 101              		.loc 1 244 28 is_stmt 0 view .LVU19
 102 0020 1A4B     		ldr	r3, .L12
 103 0022 9B68     		ldr	r3, [r3, #8]
 104              		.loc 1 244 52 view .LVU20
 105 0024 C3F30313 		ubfx	r3, r3, #4, #4
 106              		.loc 1 244 22 view .LVU21
 107 0028 1B4A     		ldr	r2, .L12+12
 108 002a D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 109              	.LVL6:
 245:Src/system_stm32f7xx.c ****   /* HCLK frequency */
 246:Src/system_stm32f7xx.c ****   SystemCoreClock >>= tmp;
 110              		.loc 1 246 3 is_stmt 1 view .LVU22
 111              		.loc 1 246 19 is_stmt 0 view .LVU23
 112 002c 184A     		ldr	r2, .L12+4
 113 002e 1368     		ldr	r3, [r2]
 114 0030 CB40     		lsrs	r3, r3, r1
 115 0032 1360     		str	r3, [r2]
 247:Src/system_stm32f7xx.c **** }
 116              		.loc 1 247 1 view .LVU24
 117 0034 7047     		bx	lr
 118              	.LVL7:
 119              	.L5:
 214:Src/system_stm32f7xx.c ****       break;
 120              		.loc 1 214 7 is_stmt 1 view .LVU25
 214:Src/system_stm32f7xx.c ****       break;
 121              		.loc 1 214 23 is_stmt 0 view .LVU26
 122 0036 164B     		ldr	r3, .L12+4
 123              	.LVL8:
 214:Src/system_stm32f7xx.c ****       break;
 124              		.loc 1 214 23 view .LVU27
 125 0038 184A     		ldr	r2, .L12+16
 126 003a 1A60     		str	r2, [r3]
 215:Src/system_stm32f7xx.c ****     case 0x08:  /* PLL used as system clock source */
 127              		.loc 1 215 7 is_stmt 1 view .LVU28
 128 003c F0E7     		b	.L8
 129              	.LVL9:
 130              	.L6:
 221:Src/system_stm32f7xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 131              		.loc 1 221 7 view .LVU29
 221:Src/system_stm32f7xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 132              		.loc 1 221 23 is_stmt 0 view .LVU30
 133 003e 134B     		ldr	r3, .L12
 134              	.LVL10:
 221:Src/system_stm32f7xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 135              		.loc 1 221 23 view .LVU31
 136 0040 5968     		ldr	r1, [r3, #4]
 137              	.LVL11:
 222:Src/system_stm32f7xx.c ****       
 138              		.loc 1 222 7 is_stmt 1 view .LVU32
 222:Src/system_stm32f7xx.c ****       
 139              		.loc 1 222 17 is_stmt 0 view .LVU33
 140 0042 5A68     		ldr	r2, [r3, #4]
 222:Src/system_stm32f7xx.c ****       
 141              		.loc 1 222 12 view .LVU34
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s 			page 8


 142 0044 02F03F02 		and	r2, r2, #63
 143              	.LVL12:
 224:Src/system_stm32f7xx.c ****       {
 144              		.loc 1 224 7 is_stmt 1 view .LVU35
 224:Src/system_stm32f7xx.c ****       {
 145              		.loc 1 224 10 is_stmt 0 view .LVU36
 146 0048 11F4800F 		tst	r1, #4194304
 147 004c 13D0     		beq	.L9
 227:Src/system_stm32f7xx.c ****       }
 148              		.loc 1 227 9 is_stmt 1 view .LVU37
 227:Src/system_stm32f7xx.c ****       }
 149              		.loc 1 227 29 is_stmt 0 view .LVU38
 150 004e 134B     		ldr	r3, .L12+16
 151 0050 B3FBF2F3 		udiv	r3, r3, r2
 227:Src/system_stm32f7xx.c ****       }
 152              		.loc 1 227 44 view .LVU39
 153 0054 0D4A     		ldr	r2, .L12
 154              	.LVL13:
 227:Src/system_stm32f7xx.c ****       }
 155              		.loc 1 227 44 view .LVU40
 156 0056 5268     		ldr	r2, [r2, #4]
 227:Src/system_stm32f7xx.c ****       }
 157              		.loc 1 227 74 view .LVU41
 158 0058 C2F38812 		ubfx	r2, r2, #6, #9
 227:Src/system_stm32f7xx.c ****       }
 159              		.loc 1 227 16 view .LVU42
 160 005c 02FB03F3 		mul	r3, r2, r3
 161              	.LVL14:
 162              	.L10:
 235:Src/system_stm32f7xx.c ****       SystemCoreClock = pllvco/pllp;
 163              		.loc 1 235 7 is_stmt 1 view .LVU43
 235:Src/system_stm32f7xx.c ****       SystemCoreClock = pllvco/pllp;
 164              		.loc 1 235 20 is_stmt 0 view .LVU44
 165 0060 0A4A     		ldr	r2, .L12
 166 0062 5268     		ldr	r2, [r2, #4]
 235:Src/system_stm32f7xx.c ****       SystemCoreClock = pllvco/pllp;
 167              		.loc 1 235 50 view .LVU45
 168 0064 C2F30142 		ubfx	r2, r2, #16, #2
 235:Src/system_stm32f7xx.c ****       SystemCoreClock = pllvco/pllp;
 169              		.loc 1 235 56 view .LVU46
 170 0068 0132     		adds	r2, r2, #1
 235:Src/system_stm32f7xx.c ****       SystemCoreClock = pllvco/pllp;
 171              		.loc 1 235 12 view .LVU47
 172 006a 5200     		lsls	r2, r2, #1
 173              	.LVL15:
 236:Src/system_stm32f7xx.c ****       break;
 174              		.loc 1 236 7 is_stmt 1 view .LVU48
 236:Src/system_stm32f7xx.c ****       break;
 175              		.loc 1 236 31 is_stmt 0 view .LVU49
 176 006c B3FBF2F3 		udiv	r3, r3, r2
 177              	.LVL16:
 236:Src/system_stm32f7xx.c ****       break;
 178              		.loc 1 236 23 view .LVU50
 179 0070 074A     		ldr	r2, .L12+4
 180              	.LVL17:
 236:Src/system_stm32f7xx.c ****       break;
 181              		.loc 1 236 23 view .LVU51
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s 			page 9


 182 0072 1360     		str	r3, [r2]
 237:Src/system_stm32f7xx.c ****     default:
 183              		.loc 1 237 7 is_stmt 1 view .LVU52
 184 0074 D4E7     		b	.L8
 185              	.LVL18:
 186              	.L9:
 232:Src/system_stm32f7xx.c ****       }
 187              		.loc 1 232 9 view .LVU53
 232:Src/system_stm32f7xx.c ****       }
 188              		.loc 1 232 29 is_stmt 0 view .LVU54
 189 0076 074B     		ldr	r3, .L12+8
 190 0078 B3FBF2F3 		udiv	r3, r3, r2
 232:Src/system_stm32f7xx.c ****       }
 191              		.loc 1 232 44 view .LVU55
 192 007c 034A     		ldr	r2, .L12
 193              	.LVL19:
 232:Src/system_stm32f7xx.c ****       }
 194              		.loc 1 232 44 view .LVU56
 195 007e 5268     		ldr	r2, [r2, #4]
 232:Src/system_stm32f7xx.c ****       }
 196              		.loc 1 232 74 view .LVU57
 197 0080 C2F38812 		ubfx	r2, r2, #6, #9
 232:Src/system_stm32f7xx.c ****       }
 198              		.loc 1 232 16 view .LVU58
 199 0084 02FB03F3 		mul	r3, r2, r3
 200              	.LVL20:
 232:Src/system_stm32f7xx.c ****       }
 201              		.loc 1 232 16 view .LVU59
 202 0088 EAE7     		b	.L10
 203              	.L13:
 204 008a 00BF     		.align	2
 205              	.L12:
 206 008c 00380240 		.word	1073887232
 207 0090 00000000 		.word	.LANCHOR0
 208 0094 0024F400 		.word	16000000
 209 0098 00000000 		.word	.LANCHOR1
 210 009c 40787D01 		.word	25000000
 211              		.cfi_endproc
 212              	.LFE142:
 214              		.global	APBPrescTable
 215              		.global	AHBPrescTable
 216              		.global	SystemCoreClock
 217              		.section	.data.SystemCoreClock,"aw"
 218              		.align	2
 219              		.set	.LANCHOR0,. + 0
 222              	SystemCoreClock:
 223 0000 00E6DF0C 		.word	216000000
 224              		.section	.rodata.AHBPrescTable,"a"
 225              		.align	2
 226              		.set	.LANCHOR1,. + 0
 229              	AHBPrescTable:
 230 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 230      00000000 
 230      01020304 
 230      06
 231 000d 070809   		.ascii	"\007\010\011"
 232              		.section	.rodata.APBPrescTable,"a"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s 			page 10


 233              		.align	2
 236              	APBPrescTable:
 237 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 237      01020304 
 238              		.text
 239              	.Letext0:
 240              		.file 2 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 241              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 242              		.file 4 "Libraries/CMSIS/Include/core_cm7.h"
 243              		.file 5 "Src/../Libraries/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 244              		.file 6 "Src/../Libraries/CMSIS/Device/ST/STM32F7xx/Include/stm32f722xx.h"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f7xx.c
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s:18     .text.SystemInit:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s:26     .text.SystemInit:0000000000000000 SystemInit
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s:45     .text.SystemInit:0000000000000010 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s:50     .text.SystemCoreClockUpdate:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s:57     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s:206    .text.SystemCoreClockUpdate:000000000000008c $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s:236    .rodata.APBPrescTable:0000000000000000 APBPrescTable
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s:229    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s:222    .data.SystemCoreClock:0000000000000000 SystemCoreClock
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s:218    .data.SystemCoreClock:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s:225    .rodata.AHBPrescTable:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccFKmy9q.s:233    .rodata.APBPrescTable:0000000000000000 $d

NO UNDEFINED SYMBOLS
