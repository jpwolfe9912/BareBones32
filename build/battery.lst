ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"battery.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_f2d
  18              		.global	__aeabi_i2d
  19              		.global	__aeabi_dmul
  20              		.global	__aeabi_dcmplt
  21              		.section	.rodata.batt_warning.str1.4,"aMS",%progbits,1
  22              		.align	2
  23              	.LC0:
  24 0000 0A424154 		.ascii	"\012BATTERY EMPTY\000"
  24      54455259 
  24      20454D50 
  24      545900
  25 000f 00       		.align	2
  26              	.LC1:
  27 0010 0A424154 		.ascii	"\012BATTERY LOW\000"
  27      54455259 
  27      204C4F57 
  27      00
  28              		.section	.text.batt_warning,"ax",%progbits
  29              		.align	1
  30              		.arch armv7e-m
  31              		.syntax unified
  32              		.thumb
  33              		.thumb_func
  34              		.fpu fpv5-sp-d16
  36              	batt_warning:
  37              	.LFB190:
  38              		.file 1 "Src/battery.c"
   1:Src/battery.c **** /** @file 		battery.c
   2:Src/battery.c ****  *  @brief
   3:Src/battery.c ****  *  	This file initializes the battery monitor and provides functions to process the data.
   4:Src/battery.c ****  *
   5:Src/battery.c ****  *  @author 	Jeremy Wolfe
   6:Src/battery.c ****  *  @date 		10 MAR 2022
   7:Src/battery.c ****  */
   8:Src/battery.c **** 
   9:Src/battery.c **** #include "board.h"
  10:Src/battery.c **** 
  11:Src/battery.c **** /* Global Functions */
  12:Src/battery.c **** float battVoltage;
  13:Src/battery.c **** battCells_e cells;
  14:Src/battery.c **** bool battLow = false;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s 			page 2


  15:Src/battery.c **** bool battEmpty = false;
  16:Src/battery.c **** 
  17:Src/battery.c **** /* Static Function Prototypes */
  18:Src/battery.c **** static battCells_e batt_cells(void);
  19:Src/battery.c **** static void batt_warning(void);
  20:Src/battery.c **** 
  21:Src/battery.c **** /** @brief Initializes the battery monitor.
  22:Src/battery.c ****  *
  23:Src/battery.c ****  *  @return Void.
  24:Src/battery.c ****  */
  25:Src/battery.c **** void
  26:Src/battery.c **** battMonInit(void)
  27:Src/battery.c **** {
  28:Src/battery.c **** 	delay(500);
  29:Src/battery.c **** 	cells = batt_cells();
  30:Src/battery.c **** 	if(cells != 0)
  31:Src/battery.c **** 		printf("\n%d cells detected\n", cells);
  32:Src/battery.c **** 	else
  33:Src/battery.c **** 		printf("\nNo battery detected\n");
  34:Src/battery.c **** }
  35:Src/battery.c **** 
  36:Src/battery.c **** /** @brief Starts the ADC conversion and processes the value.
  37:Src/battery.c ****  *
  38:Src/battery.c ****  *  @return Void.
  39:Src/battery.c ****  */
  40:Src/battery.c **** void
  41:Src/battery.c **** battMonRead(void)
  42:Src/battery.c **** {
  43:Src/battery.c **** 	adc1Ch8Start();
  44:Src/battery.c **** 	battVoltage = *rawADC * 0.0088623f;
  45:Src/battery.c **** 	batt_warning();
  46:Src/battery.c **** }
  47:Src/battery.c **** 
  48:Src/battery.c **** /** @brief Determines the amount of cells in the battery based on the voltage.
  49:Src/battery.c ****  *
  50:Src/battery.c ****  *  @return battCell_e Cell count of the battery.
  51:Src/battery.c ****  */
  52:Src/battery.c **** static battCells_e
  53:Src/battery.c **** batt_cells(void)
  54:Src/battery.c **** {
  55:Src/battery.c **** 	float summedVoltage = 0;
  56:Src/battery.c **** 	float avgVoltage = 0;
  57:Src/battery.c **** 	delay(100);
  58:Src/battery.c **** 	for(uint8_t i = 0; i < 10; i++)
  59:Src/battery.c **** 	{
  60:Src/battery.c **** 		battMonRead();
  61:Src/battery.c **** 		summedVoltage += battVoltage;
  62:Src/battery.c **** 		delay(10);
  63:Src/battery.c **** 	}
  64:Src/battery.c **** 	avgVoltage = summedVoltage / 10.0f;
  65:Src/battery.c **** 
  66:Src/battery.c **** 	if((avgVoltage >= 10.0f) && (avgVoltage < 13.3))
  67:Src/battery.c **** 		return THREE;
  68:Src/battery.c **** 	else if((avgVoltage >= 13.3) && (avgVoltage < 17.15))
  69:Src/battery.c **** 		return FOUR;
  70:Src/battery.c **** 	else if((avgVoltage >= 17.15) && (avgVoltage < 21))
  71:Src/battery.c **** 		return FIVE;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s 			page 3


  72:Src/battery.c **** 	else if(avgVoltage >= 21)
  73:Src/battery.c **** 		return SIX;
  74:Src/battery.c **** 	else
  75:Src/battery.c **** 		return NO_BATT;
  76:Src/battery.c **** 
  77:Src/battery.c **** }
  78:Src/battery.c **** 
  79:Src/battery.c **** /** @brief Warns the user if voltage falls below 3.7V and 3.5V per cell.
  80:Src/battery.c ****  *
  81:Src/battery.c ****  *  @return Void.
  82:Src/battery.c ****  */
  83:Src/battery.c **** static void
  84:Src/battery.c **** batt_warning(void)
  85:Src/battery.c **** {
  39              		.loc 1 85 1 view -0
  40              		.cfi_startproc
  41              		@ args = 0, pretend = 0, frame = 0
  42              		@ frame_needed = 0, uses_anonymous_args = 0
  43 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  44              		.cfi_def_cfa_offset 24
  45              		.cfi_offset 3, -24
  46              		.cfi_offset 4, -20
  47              		.cfi_offset 5, -16
  48              		.cfi_offset 6, -12
  49              		.cfi_offset 7, -8
  50              		.cfi_offset 14, -4
  86:Src/battery.c **** 	if(cells != 0)
  51              		.loc 1 86 2 view .LVU1
  52              		.loc 1 86 11 is_stmt 0 view .LVU2
  53 0002 254B     		ldr	r3, .L14+8
  54 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
  55              		.loc 1 86 4 view .LVU3
  56 0006 44B3     		cbz	r4, .L1
  87:Src/battery.c **** 	{
  88:Src/battery.c **** 		if(battVoltage < (cells * 3.5)){
  57              		.loc 1 88 3 is_stmt 1 view .LVU4
  58              		.loc 1 88 18 is_stmt 0 view .LVU5
  59 0008 244B     		ldr	r3, .L14+12
  60 000a 1868     		ldr	r0, [r3]	@ float
  61 000c FFF7FEFF 		bl	__aeabi_f2d
  62              	.LVL0:
  63 0010 0646     		mov	r6, r0
  64 0012 0F46     		mov	r7, r1
  65              		.loc 1 88 27 view .LVU6
  66 0014 2046     		mov	r0, r4
  67 0016 FFF7FEFF 		bl	__aeabi_i2d
  68              	.LVL1:
  69 001a 0446     		mov	r4, r0
  70 001c 0D46     		mov	r5, r1
  71 001e 0022     		movs	r2, #0
  72 0020 1F4B     		ldr	r3, .L14+16
  73 0022 FFF7FEFF 		bl	__aeabi_dmul
  74              	.LVL2:
  75 0026 0246     		mov	r2, r0
  76 0028 0B46     		mov	r3, r1
  77              		.loc 1 88 5 view .LVU7
  78 002a 3046     		mov	r0, r6
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s 			page 4


  79 002c 3946     		mov	r1, r7
  80 002e FFF7FEFF 		bl	__aeabi_dcmplt
  81              	.LVL3:
  82 0032 98B9     		cbnz	r0, .L12
  89:Src/battery.c **** 			color(RED, YES);
  90:Src/battery.c **** 			printf("\nBATTERY EMPTY\n");
  91:Src/battery.c **** 			colorDefault();
  92:Src/battery.c **** 			battEmpty = true;
  93:Src/battery.c **** 		}
  94:Src/battery.c **** 		else if(battVoltage < (cells * 3.7)){
  83              		.loc 1 94 8 is_stmt 1 view .LVU8
  84              		.loc 1 94 32 is_stmt 0 view .LVU9
  85 0034 16A3     		adr	r3, .L14
  86 0036 D3E90023 		ldrd	r2, [r3]
  87 003a 2046     		mov	r0, r4
  88 003c 2946     		mov	r1, r5
  89 003e FFF7FEFF 		bl	__aeabi_dmul
  90              	.LVL4:
  91 0042 0246     		mov	r2, r0
  92 0044 0B46     		mov	r3, r1
  93              		.loc 1 94 10 view .LVU10
  94 0046 3046     		mov	r0, r6
  95 0048 3946     		mov	r1, r7
  96 004a FFF7FEFF 		bl	__aeabi_dcmplt
  97              	.LVL5:
  98 004e 90B9     		cbnz	r0, .L13
  95:Src/battery.c **** 			color(YELLOW, YES);
  96:Src/battery.c **** 			printf("\nBATTERY LOW\n");
  97:Src/battery.c **** 			colorDefault();
  98:Src/battery.c **** 			battLow = true;
  99:Src/battery.c **** 		}
 100:Src/battery.c **** 		else
 101:Src/battery.c **** 		{
 102:Src/battery.c **** 			battLow = false;
  99              		.loc 1 102 4 is_stmt 1 view .LVU11
 100              		.loc 1 102 12 is_stmt 0 view .LVU12
 101 0050 0023     		movs	r3, #0
 102 0052 144A     		ldr	r2, .L14+20
 103 0054 1370     		strb	r3, [r2]
 103:Src/battery.c **** 			battEmpty = false;
 104              		.loc 1 103 4 is_stmt 1 view .LVU13
 105              		.loc 1 103 14 is_stmt 0 view .LVU14
 106 0056 144A     		ldr	r2, .L14+24
 107 0058 1370     		strb	r3, [r2]
 108              	.L1:
 104:Src/battery.c **** 		}
 105:Src/battery.c **** 	}
 106:Src/battery.c **** }
 109              		.loc 1 106 1 view .LVU15
 110 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 111              	.L12:
  89:Src/battery.c **** 			printf("\nBATTERY EMPTY\n");
 112              		.loc 1 89 4 is_stmt 1 view .LVU16
 113 005c 0121     		movs	r1, #1
 114 005e 0846     		mov	r0, r1
 115 0060 FFF7FEFF 		bl	color
 116              	.LVL6:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s 			page 5


  90:Src/battery.c **** 			colorDefault();
 117              		.loc 1 90 4 view .LVU17
 118 0064 1148     		ldr	r0, .L14+28
 119 0066 FFF7FEFF 		bl	puts
 120              	.LVL7:
  91:Src/battery.c **** 			battEmpty = true;
 121              		.loc 1 91 4 view .LVU18
 122 006a FFF7FEFF 		bl	colorDefault
 123              	.LVL8:
  92:Src/battery.c **** 		}
 124              		.loc 1 92 4 view .LVU19
  92:Src/battery.c **** 		}
 125              		.loc 1 92 14 is_stmt 0 view .LVU20
 126 006e 0E4B     		ldr	r3, .L14+24
 127 0070 0122     		movs	r2, #1
 128 0072 1A70     		strb	r2, [r3]
 129 0074 F1E7     		b	.L1
 130              	.L13:
  95:Src/battery.c **** 			printf("\nBATTERY LOW\n");
 131              		.loc 1 95 4 is_stmt 1 view .LVU21
 132 0076 0121     		movs	r1, #1
 133 0078 0320     		movs	r0, #3
 134 007a FFF7FEFF 		bl	color
 135              	.LVL9:
  96:Src/battery.c **** 			colorDefault();
 136              		.loc 1 96 4 view .LVU22
 137 007e 0C48     		ldr	r0, .L14+32
 138 0080 FFF7FEFF 		bl	puts
 139              	.LVL10:
  97:Src/battery.c **** 			battLow = true;
 140              		.loc 1 97 4 view .LVU23
 141 0084 FFF7FEFF 		bl	colorDefault
 142              	.LVL11:
  98:Src/battery.c **** 		}
 143              		.loc 1 98 4 view .LVU24
  98:Src/battery.c **** 		}
 144              		.loc 1 98 12 is_stmt 0 view .LVU25
 145 0088 064B     		ldr	r3, .L14+20
 146 008a 0122     		movs	r2, #1
 147 008c 1A70     		strb	r2, [r3]
 148 008e E4E7     		b	.L1
 149              	.L15:
 150              		.align	3
 151              	.L14:
 152 0090 9A999999 		.word	-1717986918
 153 0094 99990D40 		.word	1074633113
 154 0098 00000000 		.word	.LANCHOR0
 155 009c 00000000 		.word	.LANCHOR1
 156 00a0 00000C40 		.word	1074528256
 157 00a4 00000000 		.word	.LANCHOR3
 158 00a8 00000000 		.word	.LANCHOR2
 159 00ac 00000000 		.word	.LC0
 160 00b0 10000000 		.word	.LC1
 161              		.cfi_endproc
 162              	.LFE190:
 164              		.section	.text.battMonRead,"ax",%progbits
 165              		.align	1
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s 			page 6


 166              		.global	battMonRead
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 170              		.fpu fpv5-sp-d16
 172              	battMonRead:
 173              	.LFB188:
  42:Src/battery.c **** 	adc1Ch8Start();
 174              		.loc 1 42 1 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178 0000 08B5     		push	{r3, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 3, -8
 181              		.cfi_offset 14, -4
  43:Src/battery.c **** 	battVoltage = *rawADC * 0.0088623f;
 182              		.loc 1 43 2 view .LVU27
 183 0002 FFF7FEFF 		bl	adc1Ch8Start
 184              	.LVL12:
  44:Src/battery.c **** 	batt_warning();
 185              		.loc 1 44 2 view .LVU28
  44:Src/battery.c **** 	batt_warning();
 186              		.loc 1 44 16 is_stmt 0 view .LVU29
 187 0006 084B     		ldr	r3, .L18
 188 0008 1B68     		ldr	r3, [r3]
 189 000a 1B88     		ldrh	r3, [r3]
 190 000c 07EE903A 		vmov	s15, r3	@ int
  44:Src/battery.c **** 	batt_warning();
 191              		.loc 1 44 24 view .LVU30
 192 0010 F8EEE77A 		vcvt.f32.s32	s15, s15
 193 0014 9FED057A 		vldr.32	s14, .L18+4
 194 0018 67EE877A 		vmul.f32	s15, s15, s14
  44:Src/battery.c **** 	batt_warning();
 195              		.loc 1 44 14 view .LVU31
 196 001c 044B     		ldr	r3, .L18+8
 197 001e C3ED007A 		vstr.32	s15, [r3]
  45:Src/battery.c **** }
 198              		.loc 1 45 2 is_stmt 1 view .LVU32
 199 0022 FFF7FEFF 		bl	batt_warning
 200              	.LVL13:
  46:Src/battery.c **** 
 201              		.loc 1 46 1 is_stmt 0 view .LVU33
 202 0026 08BD     		pop	{r3, pc}
 203              	.L19:
 204              		.align	2
 205              	.L18:
 206 0028 00000000 		.word	rawADC
 207 002c 2E33113C 		.word	1007760174
 208 0030 00000000 		.word	.LANCHOR1
 209              		.cfi_endproc
 210              	.LFE188:
 212              		.global	__aeabi_dcmpge
 213              		.section	.text.batt_cells,"ax",%progbits
 214              		.align	1
 215              		.syntax unified
 216              		.thumb
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s 			page 7


 217              		.thumb_func
 218              		.fpu fpv5-sp-d16
 220              	batt_cells:
 221              	.LFB189:
  54:Src/battery.c **** 	float summedVoltage = 0;
 222              		.loc 1 54 1 is_stmt 1 view -0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226 0000 38B5     		push	{r3, r4, r5, lr}
 227              		.cfi_def_cfa_offset 16
 228              		.cfi_offset 3, -16
 229              		.cfi_offset 4, -12
 230              		.cfi_offset 5, -8
 231              		.cfi_offset 14, -4
 232 0002 2DED028B 		vpush.64	{d8}
 233              		.cfi_def_cfa_offset 24
 234              		.cfi_offset 80, -24
 235              		.cfi_offset 81, -20
  55:Src/battery.c **** 	float avgVoltage = 0;
 236              		.loc 1 55 2 view .LVU35
 237              	.LVL14:
  56:Src/battery.c **** 	delay(100);
 238              		.loc 1 56 2 view .LVU36
  57:Src/battery.c **** 	for(uint8_t i = 0; i < 10; i++)
 239              		.loc 1 57 2 view .LVU37
 240 0006 6420     		movs	r0, #100
 241 0008 FFF7FEFF 		bl	delay
 242              	.LVL15:
  58:Src/battery.c **** 	{
 243              		.loc 1 58 2 view .LVU38
 244              	.LBB2:
  58:Src/battery.c **** 	{
 245              		.loc 1 58 6 view .LVU39
  58:Src/battery.c **** 	{
 246              		.loc 1 58 14 is_stmt 0 view .LVU40
 247 000c 0024     		movs	r4, #0
 248              	.LBE2:
  55:Src/battery.c **** 	float avgVoltage = 0;
 249              		.loc 1 55 8 view .LVU41
 250 000e 9FED328A 		vldr.32	s16, .L42+16
 251              	.LBB3:
  58:Src/battery.c **** 	{
 252              		.loc 1 58 2 view .LVU42
 253 0012 0BE0     		b	.L21
 254              	.LVL16:
 255              	.L22:
  60:Src/battery.c **** 		summedVoltage += battVoltage;
 256              		.loc 1 60 3 is_stmt 1 discriminator 3 view .LVU43
 257 0014 FFF7FEFF 		bl	battMonRead
 258              	.LVL17:
  61:Src/battery.c **** 		delay(10);
 259              		.loc 1 61 3 discriminator 3 view .LVU44
  61:Src/battery.c **** 		delay(10);
 260              		.loc 1 61 17 is_stmt 0 discriminator 3 view .LVU45
 261 0018 304B     		ldr	r3, .L42+20
 262 001a D3ED007A 		vldr.32	s15, [r3]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s 			page 8


 263 001e 38EE278A 		vadd.f32	s16, s16, s15
 264              	.LVL18:
  62:Src/battery.c **** 	}
 265              		.loc 1 62 3 is_stmt 1 discriminator 3 view .LVU46
 266 0022 0A20     		movs	r0, #10
 267 0024 FFF7FEFF 		bl	delay
 268              	.LVL19:
  58:Src/battery.c **** 	{
 269              		.loc 1 58 29 discriminator 3 view .LVU47
  58:Src/battery.c **** 	{
 270              		.loc 1 58 30 is_stmt 0 discriminator 3 view .LVU48
 271 0028 0134     		adds	r4, r4, #1
 272              	.LVL20:
  58:Src/battery.c **** 	{
 273              		.loc 1 58 30 discriminator 3 view .LVU49
 274 002a E4B2     		uxtb	r4, r4
 275              	.LVL21:
 276              	.L21:
  58:Src/battery.c **** 	{
 277              		.loc 1 58 21 is_stmt 1 discriminator 1 view .LVU50
  58:Src/battery.c **** 	{
 278              		.loc 1 58 2 is_stmt 0 discriminator 1 view .LVU51
 279 002c 092C     		cmp	r4, #9
 280 002e F1D9     		bls	.L22
 281              	.LBE3:
  64:Src/battery.c **** 
 282              		.loc 1 64 2 is_stmt 1 view .LVU52
  64:Src/battery.c **** 
 283              		.loc 1 64 13 is_stmt 0 view .LVU53
 284 0030 F2EE047A 		vmov.f32	s15, #1.0e+1
 285 0034 C8EE278A 		vdiv.f32	s17, s16, s15
 286              	.LVL22:
  66:Src/battery.c **** 		return THREE;
 287              		.loc 1 66 2 is_stmt 1 view .LVU54
  66:Src/battery.c **** 		return THREE;
 288              		.loc 1 66 4 is_stmt 0 view .LVU55
 289 0038 F4EEE78A 		vcmpe.f32	s17, s15
 290 003c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 291 0040 09DB     		blt	.L23
  66:Src/battery.c **** 		return THREE;
 292              		.loc 1 66 42 discriminator 1 view .LVU56
 293 0042 18EE900A 		vmov	r0, s17
 294 0046 FFF7FEFF 		bl	__aeabi_f2d
 295              	.LVL23:
  66:Src/battery.c **** 		return THREE;
 296              		.loc 1 66 27 discriminator 1 view .LVU57
 297 004a 1FA3     		adr	r3, .L42
 298 004c D3E90023 		ldrd	r2, [r3]
 299 0050 FFF7FEFF 		bl	__aeabi_dcmplt
 300              	.LVL24:
 301 0054 78BB     		cbnz	r0, .L31
 302              	.L23:
  68:Src/battery.c **** 		return FOUR;
 303              		.loc 1 68 7 is_stmt 1 view .LVU58
  68:Src/battery.c **** 		return FOUR;
 304              		.loc 1 68 22 is_stmt 0 view .LVU59
 305 0056 18EE900A 		vmov	r0, s17
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s 			page 9


 306 005a FFF7FEFF 		bl	__aeabi_f2d
 307              	.LVL25:
 308 005e 0446     		mov	r4, r0
 309              	.LVL26:
  68:Src/battery.c **** 		return FOUR;
 310              		.loc 1 68 22 view .LVU60
 311 0060 0D46     		mov	r5, r1
  68:Src/battery.c **** 		return FOUR;
 312              		.loc 1 68 9 view .LVU61
 313 0062 19A3     		adr	r3, .L42
 314 0064 D3E90023 		ldrd	r2, [r3]
 315 0068 FFF7FEFF 		bl	__aeabi_dcmpge
 316              	.LVL27:
 317 006c 38B1     		cbz	r0, .L26
  68:Src/battery.c **** 		return FOUR;
 318              		.loc 1 68 31 discriminator 1 view .LVU62
 319 006e 18A3     		adr	r3, .L42+8
 320 0070 D3E90023 		ldrd	r2, [r3]
 321 0074 2046     		mov	r0, r4
 322 0076 2946     		mov	r1, r5
 323 0078 FFF7FEFF 		bl	__aeabi_dcmplt
 324              	.LVL28:
 325 007c E8B9     		cbnz	r0, .L32
 326              	.L26:
  70:Src/battery.c **** 		return FIVE;
 327              		.loc 1 70 7 is_stmt 1 view .LVU63
  70:Src/battery.c **** 		return FIVE;
 328              		.loc 1 70 9 is_stmt 0 view .LVU64
 329 007e 14A3     		adr	r3, .L42+8
 330 0080 D3E90023 		ldrd	r2, [r3]
 331 0084 2046     		mov	r0, r4
 332 0086 2946     		mov	r1, r5
 333 0088 FFF7FEFF 		bl	__aeabi_dcmpge
 334              	.LVL29:
 335 008c 30B1     		cbz	r0, .L28
  70:Src/battery.c **** 		return FIVE;
 336              		.loc 1 70 32 discriminator 1 view .LVU65
 337 008e F3EE057A 		vmov.f32	s15, #2.1e+1
 338 0092 F4EEE78A 		vcmpe.f32	s17, s15
 339 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 340 009a 10D4     		bmi	.L33
 341              	.L28:
  72:Src/battery.c **** 		return SIX;
 342              		.loc 1 72 7 is_stmt 1 view .LVU66
  72:Src/battery.c **** 		return SIX;
 343              		.loc 1 72 9 is_stmt 0 view .LVU67
 344 009c F3EE057A 		vmov.f32	s15, #2.1e+1
 345 00a0 F4EEE78A 		vcmpe.f32	s17, s15
 346 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 347 00a8 03DA     		bge	.L41
  75:Src/battery.c **** 
 348              		.loc 1 75 10 view .LVU68
 349 00aa 0020     		movs	r0, #0
 350              	.L25:
  77:Src/battery.c **** 
 351              		.loc 1 77 1 view .LVU69
 352 00ac BDEC028B 		vldm	sp!, {d8}
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s 			page 10


 353              		.cfi_remember_state
 354              		.cfi_restore 80
 355              		.cfi_restore 81
 356              		.cfi_def_cfa_offset 16
 357              	.LVL30:
  77:Src/battery.c **** 
 358              		.loc 1 77 1 view .LVU70
 359 00b0 38BD     		pop	{r3, r4, r5, pc}
 360              	.LVL31:
 361              	.L41:
 362              		.cfi_restore_state
  73:Src/battery.c **** 	else
 363              		.loc 1 73 10 view .LVU71
 364 00b2 0620     		movs	r0, #6
 365 00b4 FAE7     		b	.L25
 366              	.LVL32:
 367              	.L31:
  67:Src/battery.c **** 	else if((avgVoltage >= 13.3) && (avgVoltage < 17.15))
 368              		.loc 1 67 10 view .LVU72
 369 00b6 0320     		movs	r0, #3
 370 00b8 F8E7     		b	.L25
 371              	.LVL33:
 372              	.L32:
  69:Src/battery.c **** 	else if((avgVoltage >= 17.15) && (avgVoltage < 21))
 373              		.loc 1 69 10 view .LVU73
 374 00ba 0420     		movs	r0, #4
 375 00bc F6E7     		b	.L25
 376              	.L33:
  71:Src/battery.c **** 	else if(avgVoltage >= 21)
 377              		.loc 1 71 10 view .LVU74
 378 00be 0520     		movs	r0, #5
 379 00c0 F4E7     		b	.L25
 380              	.L43:
 381 00c2 00BFAFF3 		.align	3
 381      0080
 382              	.L42:
 383 00c8 9A999999 		.word	-1717986918
 384 00cc 99992A40 		.word	1076533657
 385 00d0 66666666 		.word	1717986918
 386 00d4 66263140 		.word	1076962918
 387 00d8 00000000 		.word	0
 388 00dc 00000000 		.word	.LANCHOR1
 389              		.cfi_endproc
 390              	.LFE189:
 392              		.section	.rodata.battMonInit.str1.4,"aMS",%progbits,1
 393              		.align	2
 394              	.LC2:
 395 0000 0A256420 		.ascii	"\012%d cells detected\012\000"
 395      63656C6C 
 395      73206465 
 395      74656374 
 395      65640A00 
 396              		.align	2
 397              	.LC3:
 398 0014 0A4E6F20 		.ascii	"\012No battery detected\000"
 398      62617474 
 398      65727920 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s 			page 11


 398      64657465 
 398      63746564 
 399              		.section	.text.battMonInit,"ax",%progbits
 400              		.align	1
 401              		.global	battMonInit
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu fpv5-sp-d16
 407              	battMonInit:
 408              	.LFB187:
  27:Src/battery.c **** 	delay(500);
 409              		.loc 1 27 1 is_stmt 1 view -0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413 0000 08B5     		push	{r3, lr}
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 3, -8
 416              		.cfi_offset 14, -4
  28:Src/battery.c **** 	cells = batt_cells();
 417              		.loc 1 28 2 view .LVU76
 418 0002 4FF4FA70 		mov	r0, #500
 419 0006 FFF7FEFF 		bl	delay
 420              	.LVL34:
  29:Src/battery.c **** 	if(cells != 0)
 421              		.loc 1 29 2 view .LVU77
  29:Src/battery.c **** 	if(cells != 0)
 422              		.loc 1 29 10 is_stmt 0 view .LVU78
 423 000a FFF7FEFF 		bl	batt_cells
 424              	.LVL35:
  29:Src/battery.c **** 	if(cells != 0)
 425              		.loc 1 29 8 view .LVU79
 426 000e 064B     		ldr	r3, .L48
 427 0010 1870     		strb	r0, [r3]
  30:Src/battery.c **** 		printf("\n%d cells detected\n", cells);
 428              		.loc 1 30 2 is_stmt 1 view .LVU80
  30:Src/battery.c **** 		printf("\n%d cells detected\n", cells);
 429              		.loc 1 30 4 is_stmt 0 view .LVU81
 430 0012 20B1     		cbz	r0, .L45
 431 0014 0146     		mov	r1, r0
  31:Src/battery.c **** 	else
 432              		.loc 1 31 3 is_stmt 1 view .LVU82
 433 0016 0548     		ldr	r0, .L48+4
 434 0018 FFF7FEFF 		bl	printf
 435              	.LVL36:
 436              	.L44:
  34:Src/battery.c **** 
 437              		.loc 1 34 1 is_stmt 0 view .LVU83
 438 001c 08BD     		pop	{r3, pc}
 439              	.L45:
  33:Src/battery.c **** }
 440              		.loc 1 33 3 is_stmt 1 view .LVU84
 441 001e 0448     		ldr	r0, .L48+8
 442 0020 FFF7FEFF 		bl	puts
 443              	.LVL37:
  34:Src/battery.c **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s 			page 12


 444              		.loc 1 34 1 is_stmt 0 view .LVU85
 445 0024 FAE7     		b	.L44
 446              	.L49:
 447 0026 00BF     		.align	2
 448              	.L48:
 449 0028 00000000 		.word	.LANCHOR0
 450 002c 00000000 		.word	.LC2
 451 0030 14000000 		.word	.LC3
 452              		.cfi_endproc
 453              	.LFE187:
 455              		.global	battEmpty
 456              		.global	battLow
 457              		.global	cells
 458              		.global	battVoltage
 459              		.section	.bss.battEmpty,"aw",%nobits
 460              		.set	.LANCHOR2,. + 0
 463              	battEmpty:
 464 0000 00       		.space	1
 465              		.section	.bss.battLow,"aw",%nobits
 466              		.set	.LANCHOR3,. + 0
 469              	battLow:
 470 0000 00       		.space	1
 471              		.section	.bss.battVoltage,"aw",%nobits
 472              		.align	2
 473              		.set	.LANCHOR1,. + 0
 476              	battVoltage:
 477 0000 00000000 		.space	4
 478              		.section	.bss.cells,"aw",%nobits
 479              		.set	.LANCHOR0,. + 0
 482              	cells:
 483 0000 00       		.space	1
 484              		.text
 485              	.Letext0:
 486              		.file 2 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 487              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 488              		.file 4 "Src/battery.h"
 489              		.file 5 "Src/drv/drv_color.h"
 490              		.file 6 "Src/drv/drv_adc.h"
 491              		.file 7 "Src/drv/drv_system.h"
 492              		.file 8 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdio.h"
 493              		.file 9 "<built-in>"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 battery.c
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:22     .rodata.batt_warning.str1.4:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:29     .text.batt_warning:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:36     .text.batt_warning:0000000000000000 batt_warning
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:152    .text.batt_warning:0000000000000090 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:165    .text.battMonRead:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:172    .text.battMonRead:0000000000000000 battMonRead
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:206    .text.battMonRead:0000000000000028 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:214    .text.batt_cells:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:220    .text.batt_cells:0000000000000000 batt_cells
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:383    .text.batt_cells:00000000000000c8 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:393    .rodata.battMonInit.str1.4:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:400    .text.battMonInit:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:407    .text.battMonInit:0000000000000000 battMonInit
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:449    .text.battMonInit:0000000000000028 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:463    .bss.battEmpty:0000000000000000 battEmpty
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:469    .bss.battLow:0000000000000000 battLow
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:482    .bss.cells:0000000000000000 cells
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:476    .bss.battVoltage:0000000000000000 battVoltage
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:464    .bss.battEmpty:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:470    .bss.battLow:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:472    .bss.battVoltage:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccWVUSZi.s:483    .bss.cells:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_i2d
__aeabi_dmul
__aeabi_dcmplt
color
puts
colorDefault
adc1Ch8Start
rawADC
__aeabi_dcmpge
delay
printf
