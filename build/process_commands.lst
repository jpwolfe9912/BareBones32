ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"process_commands.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.processCommands,"ax",%progbits
  18              		.align	1
  19              		.global	processCommands
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-sp-d16
  26              	processCommands:
  27              	.LFB187:
  28              		.file 1 "Src/motion/process_commands.c"
   1:Src/motion/process_commands.c **** /** @file 		process_commands.c
   2:Src/motion/process_commands.c ****  *  @brief
   3:Src/motion/process_commands.c ****  *  	This file processes the receiver inputs to ensure they are in the correct
   4:Src/motion/process_commands.c ****  *  	ranges for further computations.
   5:Src/motion/process_commands.c ****  *
   6:Src/motion/process_commands.c ****  *  @author 	Jeremy Wolfe
   7:Src/motion/process_commands.c ****  *  @date 		07 MAR 2022
   8:Src/motion/process_commands.c ****  */
   9:Src/motion/process_commands.c **** 
  10:Src/motion/process_commands.c **** /* Includes */
  11:Src/motion/process_commands.c **** #include "board.h"
  12:Src/motion/process_commands.c **** 
  13:Src/motion/process_commands.c **** /* Global Variables */
  14:Src/motion/process_commands.c **** uint8_t  commandInDetent[3]         = { true, true, true };
  15:Src/motion/process_commands.c **** uint8_t  previousCommandInDetent[3] = { true, true, true };
  16:Src/motion/process_commands.c **** 
  17:Src/motion/process_commands.c **** flightModes_e flightMode = ANGLE;
  18:Src/motion/process_commands.c **** semaphore_t armed = false;
  19:Src/motion/process_commands.c **** uint8_t armingTimer    = 0;
  20:Src/motion/process_commands.c **** uint8_t disarmingTimer = 0;
  21:Src/motion/process_commands.c **** 
  22:Src/motion/process_commands.c **** float rxCommands[8];
  23:Src/motion/process_commands.c **** 
  24:Src/motion/process_commands.c **** /** @brief Processes receiver commands.
  25:Src/motion/process_commands.c ****  *
  26:Src/motion/process_commands.c ****  *  @return Void.
  27:Src/motion/process_commands.c ****  */
  28:Src/motion/process_commands.c **** void
  29:Src/motion/process_commands.c **** processCommands(void)
  30:Src/motion/process_commands.c **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 2


  29              		.loc 1 30 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  31:Src/motion/process_commands.c **** 	uint8_t channel;
  37              		.loc 1 31 2 view .LVU1
  32:Src/motion/process_commands.c **** 	uint8_t channelsToRead = 8;
  38              		.loc 1 32 2 view .LVU2
  39              	.LVL0:
  33:Src/motion/process_commands.c **** 
  34:Src/motion/process_commands.c **** 	if ( rcActive == true )
  40              		.loc 1 34 2 view .LVU3
  41              		.loc 1 34 16 is_stmt 0 view .LVU4
  42 0002 B34B     		ldr	r3, .L63
  43 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  44              		.loc 1 34 5 view .LVU5
  45 0006 93B3     		cbz	r3, .L2
  35:Src/motion/process_commands.c **** 	{
  36:Src/motion/process_commands.c **** 		/* Makes RPY from -1000 to 1000 */
  37:Src/motion/process_commands.c **** 		rxCommands[ROLL]  = (ibusChannels[ROLL ] * 2) - MIDCOMMAND;	// Roll Range  -1000:1000
  46              		.loc 1 37 3 is_stmt 1 view .LVU6
  47              		.loc 1 37 36 is_stmt 0 view .LVU7
  48 0008 B249     		ldr	r1, .L63+4
  49 000a 0B88     		ldrh	r3, [r1]
  50              		.loc 1 37 49 view .LVU8
  51 000c A3F2DC53 		subw	r3, r3, #1500
  52 0010 5B00     		lsls	r3, r3, #1
  53              		.loc 1 37 21 view .LVU9
  54 0012 B14A     		ldr	r2, .L63+8
  55 0014 07EE903A 		vmov	s15, r3	@ int
  56 0018 F8EEE77A 		vcvt.f32.s32	s15, s15
  57 001c C2ED007A 		vstr.32	s15, [r2]
  38:Src/motion/process_commands.c **** 		rxCommands[PITCH] = (ibusChannels[PITCH] * 2) - MIDCOMMAND;	// Pitch Range -1000:1000
  58              		.loc 1 38 3 is_stmt 1 view .LVU10
  59              		.loc 1 38 36 is_stmt 0 view .LVU11
  60 0020 4B88     		ldrh	r3, [r1, #2]
  61              		.loc 1 38 49 view .LVU12
  62 0022 A3F2DC53 		subw	r3, r3, #1500
  63 0026 5B00     		lsls	r3, r3, #1
  64              		.loc 1 38 21 view .LVU13
  65 0028 07EE903A 		vmov	s15, r3	@ int
  66 002c F8EEE77A 		vcvt.f32.s32	s15, s15
  67 0030 C2ED017A 		vstr.32	s15, [r2, #4]
  39:Src/motion/process_commands.c **** 		rxCommands[YAW]   = (ibusChannels[YAW  ] * 2) - MIDCOMMAND;	// Yaw Range   -1000:1000
  68              		.loc 1 39 3 is_stmt 1 view .LVU14
  69              		.loc 1 39 36 is_stmt 0 view .LVU15
  70 0034 8B88     		ldrh	r3, [r1, #4]
  71              		.loc 1 39 49 view .LVU16
  72 0036 A3F2DC53 		subw	r3, r3, #1500
  73 003a 5B00     		lsls	r3, r3, #1
  74              		.loc 1 39 21 view .LVU17
  75 003c 07EE903A 		vmov	s15, r3	@ int
  76 0040 F8EEE77A 		vcvt.f32.s32	s15, s15
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 3


  77 0044 C2ED027A 		vstr.32	s15, [r2, #8]
  40:Src/motion/process_commands.c **** 
  41:Src/motion/process_commands.c **** 		/* Makes all other channels from 2000 to 4000 */
  42:Src/motion/process_commands.c **** 		for (channel = 3; channel < channelsToRead; channel++)
  78              		.loc 1 42 3 is_stmt 1 view .LVU18
  79              	.LVL1:
  80              		.loc 1 42 16 is_stmt 0 view .LVU19
  81 0048 0323     		movs	r3, #3
  82              		.loc 1 42 3 view .LVU20
  83 004a 0EE0     		b	.L3
  84              	.LVL2:
  85              	.L4:
  43:Src/motion/process_commands.c **** 			rxCommands[channel] = ibusChannels[channel] * 2;
  86              		.loc 1 43 4 is_stmt 1 discriminator 3 view .LVU21
  87              		.loc 1 43 38 is_stmt 0 discriminator 3 view .LVU22
  88 004c A14A     		ldr	r2, .L63+4
  89 004e 32F81320 		ldrh	r2, [r2, r3, lsl #1]
  90              		.loc 1 43 48 discriminator 3 view .LVU23
  91 0052 5200     		lsls	r2, r2, #1
  92              		.loc 1 43 24 discriminator 3 view .LVU24
  93 0054 A049     		ldr	r1, .L63+8
  94 0056 01EB8301 		add	r1, r1, r3, lsl #2
  95 005a 07EE902A 		vmov	s15, r2	@ int
  96 005e F8EEE77A 		vcvt.f32.s32	s15, s15
  97 0062 C1ED007A 		vstr.32	s15, [r1]
  42:Src/motion/process_commands.c **** 			rxCommands[channel] = ibusChannels[channel] * 2;
  98              		.loc 1 42 47 is_stmt 1 discriminator 3 view .LVU25
  42:Src/motion/process_commands.c **** 			rxCommands[channel] = ibusChannels[channel] * 2;
  99              		.loc 1 42 54 is_stmt 0 discriminator 3 view .LVU26
 100 0066 0133     		adds	r3, r3, #1
 101              	.LVL3:
  42:Src/motion/process_commands.c **** 			rxCommands[channel] = ibusChannels[channel] * 2;
 102              		.loc 1 42 54 discriminator 3 view .LVU27
 103 0068 DBB2     		uxtb	r3, r3
 104              	.LVL4:
 105              	.L3:
  42:Src/motion/process_commands.c **** 			rxCommands[channel] = ibusChannels[channel] * 2;
 106              		.loc 1 42 21 is_stmt 1 discriminator 1 view .LVU28
  42:Src/motion/process_commands.c **** 			rxCommands[channel] = ibusChannels[channel] * 2;
 107              		.loc 1 42 3 is_stmt 0 discriminator 1 view .LVU29
 108 006a 072B     		cmp	r3, #7
 109 006c EED9     		bls	.L4
 110              	.LVL5:
 111              	.L2:
  42:Src/motion/process_commands.c **** 			rxCommands[channel] = ibusChannels[channel] * 2;
 112              		.loc 1 42 16 discriminator 1 view .LVU30
 113 006e 0023     		movs	r3, #0
 114 0070 05E0     		b	.L5
 115              	.LVL6:
 116              	.L6:
  44:Src/motion/process_commands.c **** 	}
  45:Src/motion/process_commands.c **** 
  46:Src/motion/process_commands.c **** 	// Set past command in detent values
  47:Src/motion/process_commands.c **** 	for (channel = 0; channel < 3; channel++)
  48:Src/motion/process_commands.c **** 		previousCommandInDetent[channel] = commandInDetent[channel];
 117              		.loc 1 48 3 is_stmt 1 discriminator 3 view .LVU31
 118              		.loc 1 48 53 is_stmt 0 discriminator 3 view .LVU32
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 4


 119 0072 9A4A     		ldr	r2, .L63+12
 120 0074 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 121              		.loc 1 48 36 discriminator 3 view .LVU33
 122 0076 9A4A     		ldr	r2, .L63+16
 123 0078 D154     		strb	r1, [r2, r3]
  47:Src/motion/process_commands.c **** 		previousCommandInDetent[channel] = commandInDetent[channel];
 124              		.loc 1 47 33 is_stmt 1 discriminator 3 view .LVU34
  47:Src/motion/process_commands.c **** 		previousCommandInDetent[channel] = commandInDetent[channel];
 125              		.loc 1 47 40 is_stmt 0 discriminator 3 view .LVU35
 126 007a 0133     		adds	r3, r3, #1
 127              	.LVL7:
  47:Src/motion/process_commands.c **** 		previousCommandInDetent[channel] = commandInDetent[channel];
 128              		.loc 1 47 40 discriminator 3 view .LVU36
 129 007c DBB2     		uxtb	r3, r3
 130              	.LVL8:
 131              	.L5:
  47:Src/motion/process_commands.c **** 		previousCommandInDetent[channel] = commandInDetent[channel];
 132              		.loc 1 47 20 is_stmt 1 discriminator 1 view .LVU37
  47:Src/motion/process_commands.c **** 		previousCommandInDetent[channel] = commandInDetent[channel];
 133              		.loc 1 47 2 is_stmt 0 discriminator 1 view .LVU38
 134 007e 022B     		cmp	r3, #2
 135 0080 F7D9     		bls	.L6
  49:Src/motion/process_commands.c **** 
  50:Src/motion/process_commands.c **** 	// Apply deadbands and set detent discretes'
  51:Src/motion/process_commands.c **** 	for (channel = 0; channel < 3; channel++)
 136              		.loc 1 51 15 view .LVU39
 137 0082 0023     		movs	r3, #0
 138              	.LVL9:
 139              		.loc 1 51 15 view .LVU40
 140 0084 16E0     		b	.L7
 141              	.LVL10:
 142              	.L8:
  52:Src/motion/process_commands.c **** 	{
  53:Src/motion/process_commands.c **** 		/* RPY is within deadband */
  54:Src/motion/process_commands.c **** 		if ((rxCommands[channel] <= DEADBAND) && (rxCommands[channel] >= -DEADBAND))
  55:Src/motion/process_commands.c **** 		{
  56:Src/motion/process_commands.c **** 			rxCommands[channel] = 0;			// set command to 0
  57:Src/motion/process_commands.c **** 			commandInDetent[channel] = true;	// command IS within detent
  58:Src/motion/process_commands.c **** 		}
  59:Src/motion/process_commands.c **** 		else
  60:Src/motion/process_commands.c **** 		{
  61:Src/motion/process_commands.c **** 			commandInDetent[channel] = false;
 143              		.loc 1 61 4 is_stmt 1 view .LVU41
 144              		.loc 1 61 29 is_stmt 0 view .LVU42
 145 0086 954A     		ldr	r2, .L63+12
 146 0088 0020     		movs	r0, #0
 147 008a 5054     		strb	r0, [r2, r1]
  62:Src/motion/process_commands.c **** 			if (rxCommands[channel] > 0)
 148              		.loc 1 62 4 is_stmt 1 view .LVU43
 149              		.loc 1 62 7 is_stmt 0 view .LVU44
 150 008c F5EEC07A 		vcmpe.f32	s15, #0
 151 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 152 0094 2DDD     		ble	.L54
  63:Src/motion/process_commands.c **** 			{
  64:Src/motion/process_commands.c **** 				rxCommands[channel] = (rxCommands[channel] - DEADBAND) * DEADBAND_SLOPE;
 153              		.loc 1 64 5 is_stmt 1 view .LVU45
 154              		.loc 1 64 48 is_stmt 0 view .LVU46
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 5


 155 0096 B3EE087A 		vmov.f32	s14, #2.4e+1
 156 009a 77EEC77A 		vsub.f32	s15, s15, s14
 157              		.loc 1 64 60 view .LVU47
 158 009e 9FED917A 		vldr.32	s14, .L63+20
 159 00a2 67EE877A 		vmul.f32	s15, s15, s14
 160              		.loc 1 64 25 view .LVU48
 161 00a6 8C4A     		ldr	r2, .L63+8
 162 00a8 02EB8101 		add	r1, r2, r1, lsl #2
 163 00ac C1ED007A 		vstr.32	s15, [r1]
 164              	.L11:
  51:Src/motion/process_commands.c **** 	{
 165              		.loc 1 51 33 is_stmt 1 discriminator 2 view .LVU49
  51:Src/motion/process_commands.c **** 	{
 166              		.loc 1 51 40 is_stmt 0 discriminator 2 view .LVU50
 167 00b0 0133     		adds	r3, r3, #1
 168              	.LVL11:
  51:Src/motion/process_commands.c **** 	{
 169              		.loc 1 51 40 discriminator 2 view .LVU51
 170 00b2 DBB2     		uxtb	r3, r3
 171              	.LVL12:
 172              	.L7:
  51:Src/motion/process_commands.c **** 	{
 173              		.loc 1 51 20 is_stmt 1 discriminator 1 view .LVU52
  51:Src/motion/process_commands.c **** 	{
 174              		.loc 1 51 2 is_stmt 0 discriminator 1 view .LVU53
 175 00b4 022B     		cmp	r3, #2
 176 00b6 2AD8     		bhi	.L57
  54:Src/motion/process_commands.c **** 		{
 177              		.loc 1 54 3 is_stmt 1 view .LVU54
  54:Src/motion/process_commands.c **** 		{
 178              		.loc 1 54 18 is_stmt 0 view .LVU55
 179 00b8 1946     		mov	r1, r3
 180 00ba 874A     		ldr	r2, .L63+8
 181 00bc 02EB8302 		add	r2, r2, r3, lsl #2
 182 00c0 D2ED007A 		vldr.32	s15, [r2]
  54:Src/motion/process_commands.c **** 		{
 183              		.loc 1 54 6 view .LVU56
 184 00c4 B3EE087A 		vmov.f32	s14, #2.4e+1
 185 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 186 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 187 00d0 D9D8     		bhi	.L8
  54:Src/motion/process_commands.c **** 		{
 188              		.loc 1 54 41 discriminator 1 view .LVU57
 189 00d2 BBEE087A 		vmov.f32	s14, #-2.4e+1
 190 00d6 F4EEC77A 		vcmpe.f32	s15, s14
 191 00da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 192 00de D2DB     		blt	.L8
  56:Src/motion/process_commands.c **** 			commandInDetent[channel] = true;	// command IS within detent
 193              		.loc 1 56 4 is_stmt 1 view .LVU58
  56:Src/motion/process_commands.c **** 			commandInDetent[channel] = true;	// command IS within detent
 194              		.loc 1 56 24 is_stmt 0 view .LVU59
 195 00e0 7D4A     		ldr	r2, .L63+8
 196 00e2 02EB8302 		add	r2, r2, r3, lsl #2
 197 00e6 0020     		movs	r0, #0
 198 00e8 1060     		str	r0, [r2]	@ float
  57:Src/motion/process_commands.c **** 		}
 199              		.loc 1 57 4 is_stmt 1 view .LVU60
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 6


  57:Src/motion/process_commands.c **** 		}
 200              		.loc 1 57 29 is_stmt 0 view .LVU61
 201 00ea 7C4A     		ldr	r2, .L63+12
 202 00ec 0120     		movs	r0, #1
 203 00ee D054     		strb	r0, [r2, r3]
 204 00f0 DEE7     		b	.L11
 205              	.L54:
  65:Src/motion/process_commands.c **** 			}
  66:Src/motion/process_commands.c **** 			else
  67:Src/motion/process_commands.c **** 			{
  68:Src/motion/process_commands.c **** 				rxCommands[channel] = (rxCommands[channel] + DEADBAND) * DEADBAND_SLOPE;
 206              		.loc 1 68 5 is_stmt 1 view .LVU62
 207              		.loc 1 68 48 is_stmt 0 view .LVU63
 208 00f2 B3EE087A 		vmov.f32	s14, #2.4e+1
 209 00f6 77EE877A 		vadd.f32	s15, s15, s14
 210              		.loc 1 68 60 view .LVU64
 211 00fa 9FED7A7A 		vldr.32	s14, .L63+20
 212 00fe 67EE877A 		vmul.f32	s15, s15, s14
 213              		.loc 1 68 25 view .LVU65
 214 0102 754A     		ldr	r2, .L63+8
 215 0104 02EB8101 		add	r1, r2, r1, lsl #2
 216 0108 C1ED007A 		vstr.32	s15, [r1]
 217 010c D0E7     		b	.L11
 218              	.L57:
  69:Src/motion/process_commands.c **** 			}
  70:Src/motion/process_commands.c **** 		}
  71:Src/motion/process_commands.c **** 	}
  72:Src/motion/process_commands.c **** 
  73:Src/motion/process_commands.c **** 	///////////////////////////////////
  74:Src/motion/process_commands.c **** 
  75:Src/motion/process_commands.c **** 	/*		Check for disarm switch	*/
  76:Src/motion/process_commands.c **** 	if(rxCommands[AUX1] < MIDCOMMAND)
 219              		.loc 1 76 2 is_stmt 1 view .LVU66
 220              		.loc 1 76 15 is_stmt 0 view .LVU67
 221 010e 724B     		ldr	r3, .L63+8
 222              	.LVL13:
 223              		.loc 1 76 15 view .LVU68
 224 0110 93ED047A 		vldr.32	s14, [r3, #16]
 225              		.loc 1 76 4 view .LVU69
 226 0114 DFED747A 		vldr.32	s15, .L63+24
 227 0118 B4EEE77A 		vcmpe.f32	s14, s15
 228 011c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 229 0120 30D4     		bmi	.L58
 230              	.L15:
  77:Src/motion/process_commands.c **** 	{
  78:Src/motion/process_commands.c **** 		zeroPIDstates();
  79:Src/motion/process_commands.c **** 		armed = false;
  80:Src/motion/process_commands.c **** 		disarmingTimer = 0;
  81:Src/motion/process_commands.c **** 
  82:Src/motion/process_commands.c **** 		// Check for gyro bias command ( low throttle, left yaw, aft pitch, right roll )
  83:Src/motion/process_commands.c **** 		if ( (rxCommands[YAW  ] < (eepromConfig.minCheck - MIDCOMMAND)) &&		//mincheck = 2200
  84:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] > (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
  85:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
  86:Src/motion/process_commands.c **** 		{
  87:Src/motion/process_commands.c **** 			delay(100);
  88:Src/motion/process_commands.c **** 			mpu6000Calibration();
  89:Src/motion/process_commands.c **** 		}
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 7


  90:Src/motion/process_commands.c **** 
  91:Src/motion/process_commands.c **** 		if((rxCommands[YAW] < (eepromConfig.minCheck - MIDCOMMAND)) &&
  92:Src/motion/process_commands.c **** 				(rxCommands[ROLL] > (eepromConfig.maxCheck - MIDCOMMAND)) &&
  93:Src/motion/process_commands.c **** 				(rxCommands[PITCH] > (eepromConfig.maxCheck - MIDCOMMAND)))
  94:Src/motion/process_commands.c **** 		{
  95:Src/motion/process_commands.c **** 			delay(100);
  96:Src/motion/process_commands.c **** 			initPIDvalues();
  97:Src/motion/process_commands.c **** 		}
  98:Src/motion/process_commands.c **** 		if((rxCommands[YAW] > (eepromConfig.minCheck - MIDCOMMAND)) &&
  99:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] < (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 100:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 101:Src/motion/process_commands.c **** 		{
 102:Src/motion/process_commands.c **** 			delay(100);
 103:Src/motion/process_commands.c **** 			computeMPU6000RTData();
 104:Src/motion/process_commands.c **** 		}
 105:Src/motion/process_commands.c **** 	}
 106:Src/motion/process_commands.c **** 
 107:Src/motion/process_commands.c **** 	/*		Check for arm switch and throttle low(<2200)	*/
 108:Src/motion/process_commands.c **** 	if((rxCommands[AUX1] > MIDCOMMAND) &&
 231              		.loc 1 108 2 is_stmt 1 view .LVU70
 232              		.loc 1 108 16 is_stmt 0 view .LVU71
 233 0122 6D4B     		ldr	r3, .L63+8
 234 0124 93ED047A 		vldr.32	s14, [r3, #16]
 235              		.loc 1 108 4 view .LVU72
 236 0128 DFED6F7A 		vldr.32	s15, .L63+24
 237 012c B4EEE77A 		vcmpe.f32	s14, s15
 238 0130 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 239 0134 0EDD     		ble	.L28
 109:Src/motion/process_commands.c **** 	   (rxCommands[THROTTLE] < eepromConfig.minCheck) &&
 240              		.loc 1 109 16 discriminator 1 view .LVU73
 241 0136 93ED037A 		vldr.32	s14, [r3, #12]
 242              		.loc 1 109 41 discriminator 1 view .LVU74
 243 013a 6C4B     		ldr	r3, .L63+28
 244 013c D3ED1E7A 		vldr.32	s15, [r3, #120]
 108:Src/motion/process_commands.c **** 	   (rxCommands[THROTTLE] < eepromConfig.minCheck) &&
 245              		.loc 1 108 37 discriminator 1 view .LVU75
 246 0140 B4EEE77A 		vcmpe.f32	s14, s15
 247 0144 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 248 0148 04D5     		bpl	.L28
 110:Src/motion/process_commands.c **** 	   (armed == false))
 249              		.loc 1 110 12 view .LVU76
 250 014a 694B     		ldr	r3, .L63+32
 251 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 109:Src/motion/process_commands.c **** 	   (rxCommands[THROTTLE] < eepromConfig.minCheck) &&
 252              		.loc 1 109 52 view .LVU77
 253 014e 002B     		cmp	r3, #0
 254 0150 00F0A480 		beq	.L59
 255              	.L28:
 111:Src/motion/process_commands.c **** 	{
 112:Src/motion/process_commands.c **** 		zeroPIDstates();
 113:Src/motion/process_commands.c **** 		armed = true;
 114:Src/motion/process_commands.c **** 	}
 115:Src/motion/process_commands.c **** 
 116:Src/motion/process_commands.c **** 	/* Check for Flight Mode Change */
 117:Src/motion/process_commands.c **** 	if(rxCommands[AUX3] > MIDCOMMAND)
 256              		.loc 1 117 2 is_stmt 1 view .LVU78
 257              		.loc 1 117 15 is_stmt 0 view .LVU79
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 8


 258 0154 604B     		ldr	r3, .L63+8
 259 0156 93ED067A 		vldr.32	s14, [r3, #24]
 260              		.loc 1 117 4 view .LVU80
 261 015a DFED637A 		vldr.32	s15, .L63+24
 262 015e B4EEE77A 		vcmpe.f32	s14, s15
 263 0162 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 264 0166 40F39F80 		ble	.L55
 118:Src/motion/process_commands.c **** 		flightMode = RATE;
 265              		.loc 1 118 3 is_stmt 1 view .LVU81
 266              		.loc 1 118 14 is_stmt 0 view .LVU82
 267 016a 624B     		ldr	r3, .L63+36
 268 016c 0022     		movs	r2, #0
 269 016e 1A70     		strb	r2, [r3]
 270              	.L33:
 119:Src/motion/process_commands.c **** 	else
 120:Src/motion/process_commands.c **** 		flightMode = ANGLE;
 121:Src/motion/process_commands.c **** 
 122:Src/motion/process_commands.c **** 	///////////////////////////////////
 123:Src/motion/process_commands.c **** 
 124:Src/motion/process_commands.c **** 	// Check for armed true and throttle command > minThrottle
 125:Src/motion/process_commands.c **** 
 126:Src/motion/process_commands.c **** 	if ((armed == true) && (rxCommands[THROTTLE] > eepromConfig.minThrottle))
 271              		.loc 1 126 2 is_stmt 1 view .LVU83
 272              		.loc 1 126 13 is_stmt 0 view .LVU84
 273 0170 5F4B     		ldr	r3, .L63+32
 274 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 275 0174 DBB2     		uxtb	r3, r3
 276              		.loc 1 126 5 view .LVU85
 277 0176 012B     		cmp	r3, #1
 278 0178 00F09A80 		beq	.L60
 279              	.L34:
 127:Src/motion/process_commands.c **** 		pidReset = false;
 128:Src/motion/process_commands.c **** 	else
 129:Src/motion/process_commands.c **** 		pidReset = true;
 280              		.loc 1 129 3 is_stmt 1 view .LVU86
 281              		.loc 1 129 12 is_stmt 0 view .LVU87
 282 017c 5E4B     		ldr	r3, .L63+40
 283 017e 0122     		movs	r2, #1
 284 0180 1A70     		strb	r2, [r3]
 285              	.L1:
 130:Src/motion/process_commands.c **** }
 286              		.loc 1 130 1 view .LVU88
 287 0182 08BD     		pop	{r3, pc}
 288              	.L58:
  78:Src/motion/process_commands.c **** 		armed = false;
 289              		.loc 1 78 3 is_stmt 1 view .LVU89
 290 0184 FFF7FEFF 		bl	zeroPIDstates
 291              	.LVL14:
  79:Src/motion/process_commands.c **** 		disarmingTimer = 0;
 292              		.loc 1 79 3 view .LVU90
  79:Src/motion/process_commands.c **** 		disarmingTimer = 0;
 293              		.loc 1 79 9 is_stmt 0 view .LVU91
 294 0188 0023     		movs	r3, #0
 295 018a 594A     		ldr	r2, .L63+32
 296 018c 1370     		strb	r3, [r2]
  80:Src/motion/process_commands.c **** 
 297              		.loc 1 80 3 is_stmt 1 view .LVU92
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 9


  80:Src/motion/process_commands.c **** 
 298              		.loc 1 80 18 is_stmt 0 view .LVU93
 299 018e 5B4A     		ldr	r2, .L63+44
 300 0190 1370     		strb	r3, [r2]
  83:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] > (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 301              		.loc 1 83 3 is_stmt 1 view .LVU94
  83:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] > (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 302              		.loc 1 83 19 is_stmt 0 view .LVU95
 303 0192 514B     		ldr	r3, .L63+8
 304 0194 93ED027A 		vldr.32	s14, [r3, #8]
  83:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] > (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 305              		.loc 1 83 42 view .LVU96
 306 0198 544B     		ldr	r3, .L63+28
 307 019a D3ED1E7A 		vldr.32	s15, [r3, #120]
  83:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] > (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 308              		.loc 1 83 52 view .LVU97
 309 019e DFED526A 		vldr.32	s13, .L63+24
 310 01a2 77EEE67A 		vsub.f32	s15, s15, s13
  83:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] > (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 311              		.loc 1 83 6 view .LVU98
 312 01a6 B4EEE77A 		vcmpe.f32	s14, s15
 313 01aa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 314 01ae 16D5     		bpl	.L17
  84:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 315              		.loc 1 84 16 discriminator 1 view .LVU99
 316 01b0 494B     		ldr	r3, .L63+8
 317 01b2 D3ED006A 		vldr.32	s13, [r3]
  84:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 318              		.loc 1 84 39 discriminator 1 view .LVU100
 319 01b6 4D4B     		ldr	r3, .L63+28
 320 01b8 93ED1F7A 		vldr.32	s14, [r3, #124]
  84:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 321              		.loc 1 84 49 discriminator 1 view .LVU101
 322 01bc 9FED4A6A 		vldr.32	s12, .L63+24
 323 01c0 37EE467A 		vsub.f32	s14, s14, s12
  83:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] > (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 324              		.loc 1 83 67 discriminator 1 view .LVU102
 325 01c4 F4EEC76A 		vcmpe.f32	s13, s14
 326 01c8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 327 01cc 07DD     		ble	.L17
  85:Src/motion/process_commands.c **** 		{
 328              		.loc 1 85 16 view .LVU103
 329 01ce 424B     		ldr	r3, .L63+8
 330 01d0 93ED017A 		vldr.32	s14, [r3, #4]
  84:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 331              		.loc 1 84 64 view .LVU104
 332 01d4 F4EEC77A 		vcmpe.f32	s15, s14
 333 01d8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 334 01dc 52DC     		bgt	.L61
 335              	.L17:
  91:Src/motion/process_commands.c **** 				(rxCommands[ROLL] > (eepromConfig.maxCheck - MIDCOMMAND)) &&
 336              		.loc 1 91 3 is_stmt 1 view .LVU105
  91:Src/motion/process_commands.c **** 				(rxCommands[ROLL] > (eepromConfig.maxCheck - MIDCOMMAND)) &&
 337              		.loc 1 91 17 is_stmt 0 view .LVU106
 338 01de 3E4B     		ldr	r3, .L63+8
 339 01e0 93ED027A 		vldr.32	s14, [r3, #8]
  91:Src/motion/process_commands.c **** 				(rxCommands[ROLL] > (eepromConfig.maxCheck - MIDCOMMAND)) &&
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 10


 340              		.loc 1 91 38 view .LVU107
 341 01e4 414B     		ldr	r3, .L63+28
 342 01e6 D3ED1E7A 		vldr.32	s15, [r3, #120]
  91:Src/motion/process_commands.c **** 				(rxCommands[ROLL] > (eepromConfig.maxCheck - MIDCOMMAND)) &&
 343              		.loc 1 91 48 view .LVU108
 344 01ea DFED3F6A 		vldr.32	s13, .L63+24
 345 01ee 77EEE67A 		vsub.f32	s15, s15, s13
  91:Src/motion/process_commands.c **** 				(rxCommands[ROLL] > (eepromConfig.maxCheck - MIDCOMMAND)) &&
 346              		.loc 1 91 5 view .LVU109
 347 01f2 B4EEE77A 		vcmpe.f32	s14, s15
 348 01f6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 349 01fa 14D5     		bpl	.L21
  92:Src/motion/process_commands.c **** 				(rxCommands[PITCH] > (eepromConfig.maxCheck - MIDCOMMAND)))
 350              		.loc 1 92 16 discriminator 1 view .LVU110
 351 01fc 364B     		ldr	r3, .L63+8
 352 01fe 93ED007A 		vldr.32	s14, [r3]
  92:Src/motion/process_commands.c **** 				(rxCommands[PITCH] > (eepromConfig.maxCheck - MIDCOMMAND)))
 353              		.loc 1 92 38 discriminator 1 view .LVU111
 354 0202 3A4B     		ldr	r3, .L63+28
 355 0204 D3ED1F7A 		vldr.32	s15, [r3, #124]
  92:Src/motion/process_commands.c **** 				(rxCommands[PITCH] > (eepromConfig.maxCheck - MIDCOMMAND)))
 356              		.loc 1 92 48 discriminator 1 view .LVU112
 357 0208 77EEE67A 		vsub.f32	s15, s15, s13
  91:Src/motion/process_commands.c **** 				(rxCommands[ROLL] > (eepromConfig.maxCheck - MIDCOMMAND)) &&
 358              		.loc 1 91 63 discriminator 1 view .LVU113
 359 020c B4EEE77A 		vcmpe.f32	s14, s15
 360 0210 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 361 0214 07DD     		ble	.L21
  93:Src/motion/process_commands.c **** 		{
 362              		.loc 1 93 16 view .LVU114
 363 0216 304B     		ldr	r3, .L63+8
 364 0218 93ED017A 		vldr.32	s14, [r3, #4]
  92:Src/motion/process_commands.c **** 				(rxCommands[PITCH] > (eepromConfig.maxCheck - MIDCOMMAND)))
 365              		.loc 1 92 63 view .LVU115
 366 021c F4EEC77A 		vcmpe.f32	s15, s14
 367 0220 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 368 0224 34D4     		bmi	.L62
 369              	.L21:
  98:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] < (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 370              		.loc 1 98 3 is_stmt 1 view .LVU116
  98:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] < (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 371              		.loc 1 98 17 is_stmt 0 view .LVU117
 372 0226 2C4B     		ldr	r3, .L63+8
 373 0228 93ED027A 		vldr.32	s14, [r3, #8]
  98:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] < (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 374              		.loc 1 98 38 view .LVU118
 375 022c 2F4B     		ldr	r3, .L63+28
 376 022e D3ED1E7A 		vldr.32	s15, [r3, #120]
  98:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] < (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 377              		.loc 1 98 48 view .LVU119
 378 0232 DFED2D6A 		vldr.32	s13, .L63+24
 379 0236 77EEE67A 		vsub.f32	s15, s15, s13
  98:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] < (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 380              		.loc 1 98 5 view .LVU120
 381 023a B4EEE77A 		vcmpe.f32	s14, s15
 382 023e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 383 0242 7FF76EAF 		ble	.L15
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 11


  99:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 384              		.loc 1 99 16 discriminator 1 view .LVU121
 385 0246 244B     		ldr	r3, .L63+8
 386 0248 D3ED006A 		vldr.32	s13, [r3]
  99:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 387              		.loc 1 99 39 discriminator 1 view .LVU122
 388 024c 274B     		ldr	r3, .L63+28
 389 024e 93ED1F7A 		vldr.32	s14, [r3, #124]
  99:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 390              		.loc 1 99 49 discriminator 1 view .LVU123
 391 0252 9FED256A 		vldr.32	s12, .L63+24
 392 0256 37EE467A 		vsub.f32	s14, s14, s12
  98:Src/motion/process_commands.c **** 				(rxCommands[ROLL ] < (eepromConfig.maxCheck - MIDCOMMAND)) &&	//maxcheck = 3800
 393              		.loc 1 98 63 discriminator 1 view .LVU124
 394 025a F4EEC76A 		vcmpe.f32	s13, s14
 395 025e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 396 0262 7FF55EAF 		bpl	.L15
 100:Src/motion/process_commands.c **** 		{
 397              		.loc 1 100 16 view .LVU125
 398 0266 1C4B     		ldr	r3, .L63+8
 399 0268 93ED017A 		vldr.32	s14, [r3, #4]
  99:Src/motion/process_commands.c **** 				(rxCommands[PITCH] < (eepromConfig.minCheck - MIDCOMMAND)) )
 400              		.loc 1 99 64 view .LVU126
 401 026c F4EEC77A 		vcmpe.f32	s15, s14
 402 0270 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 403 0274 7FF755AF 		ble	.L15
 102:Src/motion/process_commands.c **** 			computeMPU6000RTData();
 404              		.loc 1 102 4 is_stmt 1 view .LVU127
 405 0278 6420     		movs	r0, #100
 406 027a FFF7FEFF 		bl	delay
 407              	.LVL15:
 103:Src/motion/process_commands.c **** 		}
 408              		.loc 1 103 4 view .LVU128
 409 027e FFF7FEFF 		bl	computeMPU6000RTData
 410              	.LVL16:
 411 0282 4EE7     		b	.L15
 412              	.L61:
  87:Src/motion/process_commands.c **** 			mpu6000Calibration();
 413              		.loc 1 87 4 view .LVU129
 414 0284 6420     		movs	r0, #100
 415 0286 FFF7FEFF 		bl	delay
 416              	.LVL17:
  88:Src/motion/process_commands.c **** 		}
 417              		.loc 1 88 4 view .LVU130
 418 028a FFF7FEFF 		bl	mpu6000Calibration
 419              	.LVL18:
 420 028e A6E7     		b	.L17
 421              	.L62:
  95:Src/motion/process_commands.c **** 			initPIDvalues();
 422              		.loc 1 95 4 view .LVU131
 423 0290 6420     		movs	r0, #100
 424 0292 FFF7FEFF 		bl	delay
 425              	.LVL19:
  96:Src/motion/process_commands.c **** 		}
 426              		.loc 1 96 4 view .LVU132
 427 0296 FFF7FEFF 		bl	initPIDvalues
 428              	.LVL20:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 12


 429 029a C4E7     		b	.L21
 430              	.L59:
 112:Src/motion/process_commands.c **** 		armed = true;
 431              		.loc 1 112 3 view .LVU133
 432 029c FFF7FEFF 		bl	zeroPIDstates
 433              	.LVL21:
 113:Src/motion/process_commands.c **** 	}
 434              		.loc 1 113 3 view .LVU134
 113:Src/motion/process_commands.c **** 	}
 435              		.loc 1 113 9 is_stmt 0 view .LVU135
 436 02a0 134B     		ldr	r3, .L63+32
 437 02a2 0122     		movs	r2, #1
 438 02a4 1A70     		strb	r2, [r3]
 439 02a6 55E7     		b	.L28
 440              	.L55:
 120:Src/motion/process_commands.c **** 
 441              		.loc 1 120 3 is_stmt 1 view .LVU136
 120:Src/motion/process_commands.c **** 
 442              		.loc 1 120 14 is_stmt 0 view .LVU137
 443 02a8 124B     		ldr	r3, .L63+36
 444 02aa 0122     		movs	r2, #1
 445 02ac 1A70     		strb	r2, [r3]
 446 02ae 5FE7     		b	.L33
 447              	.L60:
 126:Src/motion/process_commands.c **** 		pidReset = false;
 448              		.loc 1 126 36 discriminator 1 view .LVU138
 449 02b0 094B     		ldr	r3, .L63+8
 450 02b2 93ED037A 		vldr.32	s14, [r3, #12]
 126:Src/motion/process_commands.c **** 		pidReset = false;
 451              		.loc 1 126 61 discriminator 1 view .LVU139
 452 02b6 0D4B     		ldr	r3, .L63+28
 453 02b8 D3ED207A 		vldr.32	s15, [r3, #128]
 126:Src/motion/process_commands.c **** 		pidReset = false;
 454              		.loc 1 126 22 discriminator 1 view .LVU140
 455 02bc B4EEE77A 		vcmpe.f32	s14, s15
 456 02c0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 457 02c4 7FF75AAF 		ble	.L34
 127:Src/motion/process_commands.c **** 	else
 458              		.loc 1 127 3 is_stmt 1 view .LVU141
 127:Src/motion/process_commands.c **** 	else
 459              		.loc 1 127 12 is_stmt 0 view .LVU142
 460 02c8 0B4B     		ldr	r3, .L63+40
 461 02ca 0022     		movs	r2, #0
 462 02cc 1A70     		strb	r2, [r3]
 463 02ce 58E7     		b	.L1
 464              	.L64:
 465              		.align	2
 466              	.L63:
 467 02d0 00000000 		.word	rcActive
 468 02d4 00000000 		.word	ibusChannels
 469 02d8 00000000 		.word	.LANCHOR0
 470 02dc 00000000 		.word	.LANCHOR1
 471 02e0 00000000 		.word	.LANCHOR2
 472 02e4 C525833F 		.word	1065559493
 473 02e8 00803B45 		.word	1161527296
 474 02ec 00000000 		.word	eepromConfig
 475 02f0 00000000 		.word	.LANCHOR3
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 13


 476 02f4 00000000 		.word	.LANCHOR5
 477 02f8 00000000 		.word	pidReset
 478 02fc 00000000 		.word	.LANCHOR4
 479              		.cfi_endproc
 480              	.LFE187:
 482              		.global	rxCommands
 483              		.global	disarmingTimer
 484              		.global	armingTimer
 485              		.global	armed
 486              		.global	flightMode
 487              		.global	previousCommandInDetent
 488              		.global	commandInDetent
 489              		.section	.bss.armed,"aw",%nobits
 490              		.set	.LANCHOR3,. + 0
 493              	armed:
 494 0000 00       		.space	1
 495              		.section	.bss.armingTimer,"aw",%nobits
 498              	armingTimer:
 499 0000 00       		.space	1
 500              		.section	.bss.disarmingTimer,"aw",%nobits
 501              		.set	.LANCHOR4,. + 0
 504              	disarmingTimer:
 505 0000 00       		.space	1
 506              		.section	.bss.rxCommands,"aw",%nobits
 507              		.align	2
 508              		.set	.LANCHOR0,. + 0
 511              	rxCommands:
 512 0000 00000000 		.space	32
 512      00000000 
 512      00000000 
 512      00000000 
 512      00000000 
 513              		.section	.data.commandInDetent,"aw"
 514              		.align	2
 515              		.set	.LANCHOR1,. + 0
 518              	commandInDetent:
 519 0000 010101   		.ascii	"\001\001\001"
 520              		.section	.data.flightMode,"aw"
 521              		.set	.LANCHOR5,. + 0
 524              	flightMode:
 525 0000 01       		.byte	1
 526              		.section	.data.previousCommandInDetent,"aw"
 527              		.align	2
 528              		.set	.LANCHOR2,. + 0
 531              	previousCommandInDetent:
 532 0000 010101   		.ascii	"\001\001\001"
 533              		.text
 534              	.Letext0:
 535              		.file 2 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 536              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 537              		.file 4 "Src/pid.h"
 538              		.file 5 "Src/baredrones32.h"
 539              		.file 6 "Src/motion/process_commands.h"
 540              		.file 7 "Src/sensors/ibus.h"
 541              		.file 8 "Src/drv/drv_system.h"
 542              		.file 9 "Src/sensors/mpu6000.h"
 543              		.file 10 "Src/sensors/mpu6000_calibration.h"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 14


ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 process_commands.c
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:18     .text.processCommands:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:26     .text.processCommands:0000000000000000 processCommands
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:467    .text.processCommands:00000000000002d0 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:511    .bss.rxCommands:0000000000000000 rxCommands
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:504    .bss.disarmingTimer:0000000000000000 disarmingTimer
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:498    .bss.armingTimer:0000000000000000 armingTimer
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:493    .bss.armed:0000000000000000 armed
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:524    .data.flightMode:0000000000000000 flightMode
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:531    .data.previousCommandInDetent:0000000000000000 previousCommandInDetent
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:518    .data.commandInDetent:0000000000000000 commandInDetent
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:494    .bss.armed:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:499    .bss.armingTimer:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:505    .bss.disarmingTimer:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:507    .bss.rxCommands:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:514    .data.commandInDetent:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//ccgL4HJX.s:527    .data.previousCommandInDetent:0000000000000000 $d

UNDEFINED SYMBOLS
zeroPIDstates
delay
computeMPU6000RTData
mpu6000Calibration
initPIDvalues
rcActive
ibusChannels
eepromConfig
pidReset
